<%@ Page Title="" Language="C#" MasterPageFile="~/Views/Shared/CFSite.Master" Inherits="System.Web.Mvc.ViewPage<PharmaACE.ForecastApp.Models.UWObject>" %>
<asp:Content ID="Content1" ContentPlaceHolderID="TitleContent" runat="server">
    User Workspace
</asp:Content>
<asp:Content ID="Content2" ContentPlaceHolderID="MainContent" runat="server">
    <script type="text/javascript" src="../../Scripts/custom/PharmaACE.ForecastApp.Service.js"></script>
    <script type="text/javascript" src="../../Scripts/custom/PharmaACE.ForecastApp.Constants.js"></script>
    <script type="text/javascript" src="../../Scripts/custom/PharmaACE.ForecastApp.FeedEngine.js"></script>
    <script type="text/javascript" src="../../Scripts/custom/PharmaACE.ForecastApp.Utility.js"></script>
    <script type="text/javascript" src="../../Scripts/custom/PharmaACE.ForecastApp.NewsFeed.js"></script>
    <script type="text/javascript" src="../../Scripts/custom/bootbox.js"></script>
     <script type="text/javascript" src="../../Scripts/lib/jquery/jquery.easy-overlay.js"></script>
   <script  type="text/javascript" src="../../Scripts/custom/PharmaACE.ForecastApp.SharePopup.js"></script>

<script src="../../Scripts/lib/bootstrap/formValidation.min.js"></script>
<script src="../../Scripts/lib/jquery/jquery.nicescroll.min.js"></script>
<script src="../../Scripts/custom/PharmaACE.ForecastApp.Notification.js"></script>
<link href="https://swisnl.github.io/jQuery-contextMenu/dist/jquery.contextMenu.css" rel="stylesheet" type="text/css" />
<script src="https://swisnl.github.io/jQuery-contextMenu/dist/jquery.contextMenu.js" type="text/javascript"></script>
<script src="https://swisnl.github.io/jQuery-contextMenu/dist/jquery.ui.position.min.js" type="text/javascript"></script>
<script src="https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js"></script>
<link href="../../Content/CSS/dataTables.bootstrap.min.css" rel="stylesheet" />
<script src="../../Scripts/lib/bootstrap/bootstrap-filestyle.min.js"></script>
<script src="../../Scripts/lib/jquery/jquery.flot.js"></script>
<script src="../../Scripts/lib/jquery/jquery.flot.pie.js"></script>
       <link href="../../Content/CSS/aero.css" rel="stylesheet" />
    <script src="../../Scripts/lib/upload/jquery.knob.js"></script>
    <script src="../../Scripts/lib/upload/jquery.ui.widget.js"></script>
    <script src="../../Scripts/lib/upload/jquery.fileupload.js"></script>
    <script src="../../Scripts/lib/upload/script.js"></script>
    <link href="../../Content/CSS/calendarDefault.css" rel="stylesheet" />
<link href="../../Content/CSS/calendarStyle.css" rel="stylesheet" />
    <link href="../../Content/CSS/userworkspace.css" rel="stylesheet" />
    <script src="../../Scripts/lib/jquery/calendar_zebra_datepicker.js"></script>
    <script src="../../Scripts/lib/bootstrap/bootstrap-select.min.js"></script>
    <link href="../../Content/CSS/bootstrap-select.min.css" rel="stylesheet" />
        <script src="../../Scripts/lib/jquery/jquery.easy-overlay.js"></script>
    <script src="../../Scripts/lib/jquery/ColReorderWithResize.js"></script>
   

    <style>
        #tree0, #tree3, #tree5{max-height:110px; cursor:pointer !important; }
#treeforAdvSearch{max-height:520px; width:100%;}
#treeforfolderlist,#tree2, #tree0,#tree3,#tree5{cursor:pointer !important}
option[data-column].active{ background-color:#0094ff; color:#fff;}
#workspaceView{ display:none; padding-right:2px;}
        #workspacecustom{padding-right:0px;}
        #fileselector label{margin:0px; display:inline;}
        #drop tr:first-child th:first-child:after{display:none;}
        #drop tr:first-child th:first-child{ padding-right:5px;}
        #drop tr:first-child th:after{right:15px;}
        #showhide button{max-width:118px;}
        .searchIcon{position: absolute;
    right: 6px;
    z-index: 9;}
        #advFilter{width:160px;}

        .badge{ background-color:lightgrey; color:#000;}
        #drop{min-height:491px;}
        #ReportDiv div.dataTables_wrapper div.dataTables_paginate{margin-right:15px;}
        #ReportDiv .paginate_button:hover {cursor:pointer;}
        #ReportDiv table.dataTable thead .sorting::after, table.dataTable thead .sorting_asc::after, table.dataTable thead .sorting_desc::after, table.dataTable thead .sorting_asc_disabled::after, table.dataTable thead .sorting_desc_disabled::after
        {
            right:22px;
            
        }
        #ReportDiv table.dataTable thead th, #myCarousel table.dataTable thead th{border-right:1px solid #e1e1e1;}
        
    </style>


    <%--  <%: Scripts.Render("~/Scripts/LiveFeedScript")%>--%>
   <style>
        #workspaceView{ display:none; padding-right:2px;}
        #workspacecustom{padding-right:0px;}
        .deactivateUploadDoc{
            cursor:pointer;
            opacity: 0.4;            
        }
        @media (min-width: 768px){
            #ActLog {
    display: table-cell;
     width: auto; 
}
        }
                .hidtext{position:absolute;bottom: -6px;color:red;font-size: 2px;right: 12px;color:#fff;}
        
   </style>


    <script>

        

        var shareType = "UserWorkSpace";
        var PreText = "";
        var selectedTypeForRename = "";

        var menuns = [];


        function Insertnewline() {
            var key = window.event.keyCode;
            if (key == 13) {
                document.getElementById("performance").value = document.getElementById("performance").value + "\n";
                return false;

            }
            else
                return true;
        }
        function LimitThousandChar()
        {
            var charcount = document.getElementById("performance").value;
            if (charcount.length > 1000)
            {
                //document.getElementById("performance").checkValidity("Char length should be less than 1000");
                alert("Char length should be less than 1000");
                return false;
            }
            else {
                return true;
            }
        }
         function uploadDocument() {
           
            parentdSelectedlineage = lineageForSpan;
            var Lineage = parentdSelectedlineage;
            if (lineageForSpan.toString().includes(" "))
            {
                lineageForSpan = selectedLineage.trim();

            }
            if (lineageForSpan.toString().trim() == "0") {
                lineageForSpan = selectedFolderId;
            }           
            else {
                if (lineageForSpan.toString().includes(selectedFolderId)) {

                }
                else {
                    Lineage = Lineage + PHARMAACE.FORECASTAPP.CONSTANTS.LINEAGE_SPLITTER + selectedFolderId;
                }               
            }      

            //<%--<%:Html.Raw(PharmaACE.ForecastApp.Business.GenUtil.LINEAGE_SPLITTER)%> --%>+selectedFolderId;
        
            var uploader = document.getElementById('upload-file-selector');
            var formdata = new FormData(); //FormData object
          
            if (uploader.files == null || uploader.files.length == 0) {
                
                var uploader = document.getElementById('BSbtninfo');

                for (var i = 0; i < uploader.files.length; i++) {
                    var val = uploader.files[i].name.toLowerCase();
                    var ext = val.substr(val.lastIndexOf('.') + 1);
                    if (PHARMAACE.FORECASTAPP.FILETYPE.indexOf(ext) == -1) {
                        PHARMAACE.FORECASTAPP.UTILITY.popalert("Sorry, this file type is not permitted for security reasons...", '');
                        return;
                    }
                    formdata.append(uploader.files[i].name, uploader.files[i]);
                }
            }
            else {
                for (var i = 0; i < uploader.files.length; i++) {
                    var val = uploader.files[i].name.toLowerCase();
                    var ext = val.substr(val.lastIndexOf('.') + 1);
                    if (PHARMAACE.FORECASTAPP.FILETYPE.indexOf(ext) == -1) {
                        PHARMAACE.FORECASTAPP.UTILITY.popalert("Sorry, this file type is not permitted for security reasons...", '');
                        return;
                    }
                    formdata.append(uploader.files[i].name, uploader.files[i]);
                }
            }
           
            showOverlay("Please wait while we are uploading document...", 'editableWorkSpace', '15', '');

            var controllerUrl = "/UserWorkSpace/UploadDocuments?lineage={0}&parentId={1}".replace('{0}', Lineage).replace('{1}', selectedFolderId);
           
            var xhr = new XMLHttpRequest();
            xhr.open('POST', controllerUrl);
            xhr.send(formdata);
            xhr.onreadystatechange = function () {

                
                if (xhr.readyState == 4 && xhr.status == 200) {
                    if (xhr.responseText.includes("true") != true)
                    {
                        var r = xhr.responseText.split('[');
                        r[1].replace('"', "");
                        r[1].replace(']', "");
                        if (r[1].includes("already")) {
                            hideOverlay(true, 'editableWorkSpace');
                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Uploadig Failed " + r[1]);

                        }
                        else {
                            hideOverlay(true, 'editableWorkSpace');
                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Failed to upload " + "selected one of file has invalid extension");
                        }                  
                    }
                    else {
                        $('#btnuploadModalClose').click();
                        hideOverlay(true, 'editableWorkSpace');
                        PHARMAACE.FORECASTAPP.UTILITY.popalert("Documents uploaded successfully", '');
                        callEditableWorkSpaceJSON(selectedFolderId, Lineage);
                        document.getElementsByClassName('bootstrap-filestyle input-group')[0].firstChild.value = "";
                       
                        var split = xhr.responseText.split(',')[1].replace('"', "").split(':');
                        var fileCount = parseInt(split[1]);
                        if (fileCount > 0)
                        {
                            if (lineageForSpan.toString().trim() == "0") {
                                var ids = selectedFolderId;
                                var span = document.getElementById("SpnFCount" + ids);
                                var prevCount = span.innerHTML;
                                span.innerHTML = parseInt(parseInt(prevCount) + fileCount);

                            }
                            else {
                                var ids = lineageForSpan.toString().split(PHARMAACE.FORECASTAPP.CONSTANTS.LINEAGE_SPLITTER);

                                for (var i = 0; i < ids.length; i++) {

                                    var span = document.getElementById("SpnFCount" + ids[i]);
                                    var prevCount = span.innerHTML;
                                    span.innerHTML = parseInt(parseInt(prevCount) + fileCount);
                                }
                            }
                            hideOverlay(true, 'editableWorkSpace');
                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Documents uploaded successfully.", '');
                        }
                        else {
                            hideOverlay(true, 'editableWorkSpace');
                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Document uploading failed.", '');                            

                        }


                        
                       
                    }
                    
                }
                
                
            }
            
        }
        
        //function loadingUserworkspaceTable()
        //{
        //    var table = $('#userworkspaceTable').DataTable({
        //        "bPaginate": false,
        //             "retrieve": true,
        //             "bLengthChange": false,
        //             "bInfo": false,
        //             "bFilter": true,
        //             "dom": '<"top"i>rt<"custom-filter-bottom"flp><"clear">',
        //             'columnDefs': [{
        //                 'targets': 0,
        //                 'searchable': false,
        //                 'orderable': false,
        //                 'className': 'dt-body-center',
        //                 'render': function (data, type, full, meta) {
        //                     return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';
        //                 }
        //             }]
        //    });

        //    $('#userworkspaceTable thead th').each(function (e) {
        //             var title = $(this).text();
        //             var index = $(this).index();
        //             if (!((index == 1) || (index == 0) || (index == 7)))
        //                 $(this).html(title + "<br>" + '<input type="text" style="width:120px;height:28px;" class="shSearch" placeholder="Search ' + title + '" onclick="PHARMAACE.FORECASTAPP.UTILITY.stopPropagation(event);" onmousedown="PHARMAACE.FORECASTAPP.UTILITY.stopPropagation(event)" />');
        //    });
        //    table.columns(':gt(0)').eq(0).each(function (t) {
        //        $('input', table.column(t).header()).on('keyup change', function () {
        //            table.column(t)
        //                    .search(this.value.replace(/(;|,)\s?/g, "|"), true, false)
        //                    .draw();
        //        });
        //    });


        //    $('#example-select-all').on('click', function () {
        //       // PHARMAACE.FORECASTAPP.UTILITY.stopPropagation(event);
        //        // var rows = table.rows({ 'search': 'applied' }).nodes();
        //         $('input[type="checkbox"]').prop('checked', this.checked);
        //    });
        //    //$('#userworkspaceTable thead').on('click', 'input[type="checkbox"]', function () {
        //    //    if (this.checked) {
        //    //        $('#userworkspaceTable input[type="checkbox"]').prop('checked', this.checked);
        //    //    }
        //    //});
        //    $('#userworkspaceTable tbody').on('change', 'input[type="checkbox"]', function () {
        //             // If checkbox is not checked
        //             if (!this.checked) {
        //                 var el = $('#example-select-all').get(0);
        //                 // If "Select all" control is checked and has 'indeterminate' property
        //                 if (el && el.checked && ('indeterminate' in el)) {
        //                     // Set visual state of "Select all" control 
        //                     // as 'indeterminate'
        //                     el.indeterminate = true;
        //                 }
        //             }
        //         });

        //     // Handle click on checkbox to set state of "Select all" control
        //     //$('#userworkspaceTable tbody').on('change', 'input[type="checkbox"]', function () {
        //     //    if (!this.checked) {
        //     //        var el = $('#example-select-all').get(0);
        //     //        // If "Select all" control is checked and has 'indeterminate' property
        //     //        if (el && el.checked && ('indeterminate' in el)) {
        //     //            // Set visual state of "Select all" control 
        //     //            // as 'indeterminate'
        //     //            el.indeterminate = true;
        //     //        }
        //     //    }
        //     //});
        //   // var columnList;

        //   // var table = $('#userworkspaceTable').DataTable({
        //   //     "bPaginate": false,
        //   //     "retrieve": true,
        //   //     "bLengthChange": false,
        //   //     "bInfo": false,
        //   //     "bFilter": true,
        //   //     "dom": '<"top"i>rt<"custom-filter-bottom"flp><"clear">',
        //   //     'columnDefs': [{
        //   //         'targets': 0,
        //   //         'searchable': false,
        //   //         'orderable': false,
        //   //         'className': 'dt-body-center',
        //   //         'render': function (data, type, full, meta) {
        //   //             return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';
        //   //         }
        //   //     }],
        //   //     'order': [[1, 'asc']],
        //   //   //  "destroy": true
        //   // });
           
        //   // $('#filter').keyup(function (e) {
        //   //    // table.search($(this).val()).draw();
        //   // });
        //   // $('#userworkspaceTable thead th').each(function (e) {
        //   //     var title = $(this).text();
        //   //     var index = $(this).index();

        //   //     columnList += "<option class='toggle-vis' data-column='" + index + "'>" + title + "</option>";

        //   //     if (!((index == 1) || (index == 0) || (index == 7)))
        //   //         $(this).html(title + "<br>" + '<input type="text" style="width:120px;height:28px;" class="shSearch" placeholder="Search ' + title + '" onclick="PHARMAACE.FORECASTAPP.UTILITY.stopPropagation(event);" onmousedown="PHARMAACE.FORECASTAPP.UTILITY.stopPropagation(event)" />');
        //   // });
        //   // table.columns().every(function () {
        //   //     var that = this;
        //   //     $('input[text]', this.header()).on('keyup change', function () {
        //   //         if (that.search() !== this.value) {
        //   //             that.search(this.value).draw();
        //   //         }
        //   //     });
        //   // });
        //   //// table.columns(':gt(0)').every(function () {
        //   // //table.api().columns().eq(0).each(function (colIdx) {
        //   // //    $('input[text]', this.header()).on('keyup change', addFooterListner);
        //   // //});
        //   // $('#showhide').html("<select onchange='fnshowhide(event,this)'>" + columnList + "</select>");

        //   // $('#example-select-all').on('click', function () {
        //   //     // Get all rows with search applied
        //   //     var rows = table.rows({ 'search': 'applied' }).nodes();
        //   //     // Check/uncheck checkboxes for all rows in the table
        //   //     $('input[type="checkbox"]', rows).prop('checked', this.checked);
        //   // });

        //   // // Handle click on checkbox to set state of "Select all" control
        //   // $('#userworkspaceTable tbody').on('change', 'input[type="checkbox"]', function () {
        //   //     // If checkbox is not checked
        //   //     if (!this.checked) {
        //   //         var el = $('#example-select-all').get(0);
        //   //         // If "Select all" control is checked and has 'indeterminate' property
        //   //         if (el && el.checked && ('indeterminate' in el)) {
        //   //             // Set visual state of "Select all" control 
        //   //             // as 'indeterminate'
        //   //             el.indeterminate = true;
        //   //         }
        //   //     }
        //   // });

        //}

        function contentFilterByEnter(e) {
            if (e.keyCode === 13) {
                ContentFilterSearch();
            }
        }
        

        function getColumnIndex(name) {
            // columnArr - holds all the name of columns in array
            var colname = name.split(' ')[1];
            for (var i = 0; i < columnArr.length; i++) {
                if (columnArr[i] === colname) {
                    return i;
                }
            }
            return 0;
        };
       
        function addContextMenu() {
            var tableid = $('#drop table').attr('id');
      
            itemsDisabled["paste"] = true;
            $.contextMenu({

                //selector: '#userworkspaceTable tbody tr',
                selector: '#' + tableid + ' tbody tr',




                build: function ($trigger, e) {
                    // this callback is executed every time the menu is to be shown
                    // its results are destroyed every time the menu is hidden
                    // e is the original contextmenu event, containing e.pageX and e.pageY (amongst other data)
                    // $trigger is the element that was rightclicked on - get its id here
                    var permission = $trigger.attr('assignedpermission');
                    // build the menu items
                    if (permission == "Download") {
                        menus = {
                            //"new": { name: "Create Folder", icon: "fa-folder-o" },
                            //"uploadfile": { name: "Upload File", icon: "fa-upload" },
                            //"rename": { name: "Rename", icon: "fa-pencil-square-o" },
                            //"delete": { name: "Delete", icon: "fa-trash-o" },
                            //"share": { name: "Share", icon: "fa-share-square-o" },
                            //"copy": { name: "Copy", icon: "fa-files-o" },
                            //"paste": {
                            //    name: "Paste", icon: "fa-clipboard", disabled:
                            //    function (key, opt) {
                            //        return !!itemsDisabled[key];
                            //    }

                            //}



                        }
                    }
                    else if (permission == "Open") {
                        menus = {
                            //    "new": { name: "Create Folder", icon: "fa-folder-o" },
                            //    "uploadfile": { name: "Upload File", icon: "fa-upload" },
                            //    "rename": { name: "Rename", icon: "fa-pencil-square-o" },
                            //    "delete": { name: "Delete", icon: "fa-trash-o" },
                            //    "share": { name: "Share", icon: "fa-share-square-o" },
                            //    "copy": { name: "Copy", icon: "fa-files-o" },
                            //    "paste": {
                            //        name: "Paste", icon: "fa-clipboard", disabled:
                            //   function (key, opt) {
                            //       return !!itemsDisabled[key];
                            //   }
                            //    }
                        }
                    }

                    else if (permission == "Limited") {
                        menus = {
                            "Share": { name: "Share", icon: "fa-share-square-o" },
                            // "uploadfile": { name: "Upload File", icon: "fa-upload" },
                            "rename": { name: "Rename", icon: "fa-pencil-square-o" },
                            "delete": { name: "Delete", icon: "fa-trash-o" },
                            // "share": { name: "Share", icon: "fa-share-square-o" },
                            "copy": { name: "Copy", icon: "fa-files-o" },
                            "download": { name: "Download", icon: "fa-download" }

                        }
                    }


                    else if (permission == "View") {
                        menus = {

                            //"uploadfile": { name: "Upload File", icon: "upload" },
                            //"View": { name: "View", icon: "fa-share-square-o" }
                        }
                    }


                    else if (permission == "NoAccess") {
                        menus = {

                        }
                    }
                    return {
                        callback: function (key, options) {

                            var x, ParentId;

                            var ListItem = $("li[class*='context-menu-active']");
                            var pid = $(ListItem).attr('id');
                           
                            if (typeof pid != 'undefined') {
                                document.getElementById("txtParent").value = pid;
                            }

                            trRow = $("tr[class*='context-menu-active']");
                            
                            var PrevName = trRow.find('#contentName').text();

                            ParentId = $(trRow).attr('folderId');
                            var CopyFileId = ParentId;
                            var deletFileId = ParentId;
                            selectedFileIdForReporting = ParentId;
                            if (typeof ParentId != 'undefined') {
                                document.getElementById("txtParent").value = ParentId;
                            }
                            if (typeof selectedFileIdForReporting != 'undefined') {
                                document.getElementById("txtParentRename").value = selectedFileIdForReporting;
                            }
                            var tableid = $('#drop table').attr('id');
                            //var values = $('#userworkspaceTable tr.context-menu-active td').map(function (index, td) {
                            var values = $('#' + tableid + ' tr.context-menu-active td').map(function (index, td) {

                                var ret = {};
                                if (index == 8) {
                                    x = $(td).text();
                                }
                                if (index == 2) {

                                    ParentId = $(td).text();
                                    var newpid = $(x).attr('folderId ');


                                }
                                ret[index] = $(td).text();
                                return ret;
                            }).get();

                            if (x == "File") {
                                alert("The directry or file can not be created under file..!!");
                            }
                            else {

                                if (key == "new") {
                                    $('#btnmodl').click();

                                    var s = document.getElementById('txtFolderName').value
                                }
                                if (key == "uploadfile") {
                                    $('#btnupload').click();

                                    var s = document.getElementById('txtFolderName').value
                                }
                                if (key == "rename") {
                                    selectedTypeForRename = "File";

                                    document.getElementById('txtFolderNameRename').placeholder = PrevName;
                                    $('#btnrename').click();
                                    document.getElementById('renameModalLabel').innerHTML = "Rename File";



                                }
                                if (key == "download")
                                {
                                    //trRow.children().click();
                                   // var tableid = $('#drop table').attr('id');

                                  //  $('#' + tableid).find(trRow).parentElement.nextElementSibling.nextElementSibling.firstElementChild.click();
                                      

                                    var r = trRow[0].getElementsByTagName("a");
                                    r[1].click();


                                }
                                if (key == "copy") {

                                    objectIdForCopy = CopyFileId;
                                    lineageForCopy = "";
                                    isFileCopy = true;
                                    itemsDisabled["paste"]=false;
                                }

                                if (key == "delete")
                                {
                                    var isProceedDelete = "";
                                    var fileLineage = $(trRow).attr('fileLineage');
                                    var FileNameForDelete = trRow.find('#contentName').text();
                                    bootbox.confirm({
                                        size: 'small',
                                        message: 'Are you sure you want to delete file' + FileNameForDelete,
                                        buttons: {
                                            'confirm': {
                                                label: 'Yes',
                                                className: 'btn-danger pull-right'
                                            },
                                            'cancel': {
                                                label: 'No',
                                                className: 'btn-default pull-left'
                                            }
                                        },
                                        callback: function (result) {
                                            if (result) {

                                                objectIdForDelete = deletFileId;
                                                lineageForDelete = "";

                                                $.ajax({
                                                    "url": "UserWorkSpace/delete",
                                                    "data":
                                                        {
                                                            'objectIdForDelete': objectIdForDelete,
                                                            'lineageForDelete': lineageForDelete


                                                        },
                                                    "success": function (result) {
                                                        if (result == 0) {

                                                            PHARMAACE.FORECASTAPP.UTILITY.popalert(FileNameForDelete+" file deleted successfully");

                                                            trRow.remove();
                                                          //  var lineageForSpanAfterAppend=lineageForSpan+PHARMAACE.FORECASTAPP.CONSTANTS.LINEAGE_SPLITTER+selectedFolderId;

                                                            if (fileLineage.toString().trim() == "0")
                                                            {
                                                                var ids = selectedFolderId;
                                                                var span = document.getElementById("SpnFCount" + ids);
                                                                var prevCount = span.innerHTML;


                                                                span.innerHTML = parseInt(parseInt(prevCount) - 1);

                                                            }
                                                           
                                                         {
                                                             var ids = fileLineage.toString().split(PHARMAACE.FORECASTAPP.CONSTANTS.LINEAGE_SPLITTER);
                                                              
                                                                for (var i = 0; i < ids.length; i++) {
                                                              

                                                                    var span = document.getElementById("SpnFCount" + ids[i]);
                                                                    var prevCount = span.innerHTML;
                                                                    span.innerHTML = parseInt(parseInt(prevCount) - 1);
                                                                }
                                                            }

                                                       }
                                                        else {
                                                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Unable to delete file" + FileNameForDelete);

                                                        }

                                                    }
                                                });


                                            }
                                            else {

                                            }
                                        }
                                    });

                                    objectIdForDelete ="";
                                    lineageForDelete = "";

                                }

                                if (key == "Share") {

                                    typeOfObjectShare = "File";
                                    ObjectIdForShare = $(trRow).attr('folderId');
                                    PHARMAACE.FORECASTAPP.SHARE.autocompleteForUsers();
                                    PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/FecthAlreadyShared", { ObjectId: ObjectIdForShare },
                    function (result) {
                        if (result.success) {
                            if (result.userForShare.length == 0) {
                                $("#btnShowShare").click();
                                populateSharePopup();
                                $('#prdverid tr').remove();

                            }
                            else if (result.userForShare.length > 0) {

                                $("#btnShowShare").click();
                                populateSharePopupWithFetchedData(result.userForShare);

                            }
                        }

                        else
                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                    },
                    function (result) {
                        PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                    });

                                }


                            }
                        },
                        items: menus
                    };
                }



                //    callback: function (key, options) {

                //        var x, ParentId;

                //        var ListItem = $("li[class*='context-menu-active']");
                //        var pid = $(ListItem).attr('id');
                //        selectedLineage = $(ListItem).attr('lineageString');
                //        if (typeof pid != 'undefined') {
                //            document.getElementById("txtParent").value = pid;
                //        }

                //        trRow = $("tr[class*='context-menu-active']");

                //        ParentId = $(trRow).attr('folderId');
                //        var CopyFileId = ParentId;
                //        selectedFileIdForReporting = ParentId;
                //        if (typeof ParentId != 'undefined') {
                //            document.getElementById("txtParent").value = ParentId;
                //        }
                //        if (typeof selectedFileIdForReporting != 'undefined') {
                //            document.getElementById("txtParentRename").value = selectedFileIdForReporting;
                //        }
                //        var tableid = $('#drop table').attr('id');
                //        //var values = $('#userworkspaceTable tr.context-menu-active td').map(function (index, td) {
                //        var values = $('#' + tableid + ' tr.context-menu-active td').map(function (index, td) {

                //            var ret = {};
                //            if (index == 8)
                //            {
                //                x = $(td).text();
                //            }
                //            if (index == 2) {

                //                ParentId = $(td).text();
                //                var newpid = $(x).attr('folderId ');


                //            }
                //            ret[index] = $(td).text();
                //            return ret;
                //        }).get();

                //        // alert(x);

                //        if (x == "File") {
                //            alert("The directry or file can not be created under file..!!");
                //        }
                //        else {

                //            if (key == "new") {
                //                $('#btnmodl').click();

                //                var s = document.getElementById('txtFolderName').value
                //            }
                //            if (key == "uploadfile") {
                //                $('#btnupload').click();

                //                var s = document.getElementById('txtFolderName').value
                //            }
                //            if (key == "rename") {

                //                $('#btnrename').click();

                //            }
                //            if (key == "copy") {

                //                objectIdForCopy = CopyFileId;
                //                lineageForCopy = "";
                //                itemsDisabled["paste"] = false;

                //            }

                //            if (key == "share") {

                //                typeOfObjectShare = "File";
                //                ObjectIdForShare = $(trRow).attr('folderId');

                //                PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/FecthAlreadyShared", { ObjectId: ObjectIdForShare },
                //function (result) {
                //    if (result.success) {
                //        if (result.userForShare.length == 0) {
                //            $("#btnShowShare").click();
                //            populateSharePopup();
                //            $('#prdverid tr').remove();

                //        }
                //        else if (result.userForShare.length > 0) {

                //            $("#btnShowShare").click();
                //            populateSharePopupWithFetchedData(result.userForShare);

                //        }
                //    }

                //    else
                //        PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                //},
                //function (result) {
                //    PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                //});

                //            }


                //        }

                //        /// var m = "clicked: " + key;

                //    },
                //    items: {

                //        "new": {
                //            name: "Create Folder", icon: "fa-folder-o", disabled:
                //                function (key, opt) {
                //                    return !!itemsDisabled[key];
                //                }
                //        },
                //        "uploadfile": {
                //            name: "Upload File", icon: "fa-files-o", disabled: function (key, opt) {
                //                return !!itemsDisabled[key];
                //            }
                //        },
                //        "rename": { name: "Rename", icon: "fa-pencil-square-o" },
                //        "download": { name: "Download", icon: "fa-download" },
                //        "share": { name: "share", icon: "fa-share-square-o" },
                //        "copy": { name: "copy", icon: "fa-share-square-o" }

                //        //"paste": {name: "Certificate", icon: "fa-certificate"},
                //        //"sep1": "---------",
                //        //"quit": {
                //        //    name: "Quit", icon: function () {
                //        //        return 'context-menu-icon context-menu-icon-quit';
                //        //    }
                //        //},

                //        //"folder": {
                //        //    name: "Create New", icon: function (opt, $itemElement, itemKey, item) {
                //        //        // Set the content to the menu trigger selector and add an bootstrap icon to the item.
                //        //        $itemElement.html('<span class="glyphicon glyphicon-star" aria-hidden="true"></span> ' + "Create New");

                //        //        // Add the context-menu-icon-updated class to the item
                //        //        return 'context-menu-icon-updated';
                //        //    }
                //        //}

                //    }

            });
        }


        function isImage(extension)
        {
            if (extension == "jpg" || extension == "jpeg" || extension == "png" || extension == "bmp" || extension == "tif" || extension == "xml" || extension == "GIF" || extension == "dif")
                return true;
            return false;
        }

        function enableMultiDocDownload() {


            var tableid = $('#drop table').attr('id');
            var checkBoxCount = 0;
            $('#' + tableid).find('tr').find('input:checkbox:checked').each(function () {

                
                    checkBoxCount++;
                

              
            });
            if (checkBoxCount > 0)
            {
                $('#LiDownloadDoc').removeClass('deactivateUploadDoc');
            }
            else
            {
                $('#LiDownloadDoc').addClass('deactivateUploadDoc');
            }


           
        }
        function addFileFolders(contents) {
            if (contents.length > 0) {
                $('#custom-search-input').css("display", "block");
            }
               // var tableRef = document.getElementById('userworkspaceTable').getElementsByTagName('tbody')[0];
                var tableRef = document.getElementById('drop');

                var str = '';
                var str2 = '';
                var str3 = '';
                var i = 1;
                var yoursystemday = new Date(new Date().getTime() - (120000 * 60 + new Date().getTimezoneOffset() * 60000));
                var random = Math.round(Math.round(yoursystemday));
                satr2 = '<table id="userworkspaceTable' + random + '" class="table table-striped select" cellspacing="0" width="100%" ><thead><tr><th><input type="checkbox" name="select_all" value="1" id="example-select-all"  onchange="enableMultiDocDownload()"></th><th>Path</th><th>Name</th><th>Shared With</th><th>Type</th><th>Created Date</th><th>Size (kb)</th></tr></thead>';
                
                satr3 = '</tbody></table>';
            
        
                contents.forEach(function (content) {
                    var creationDate = content.creationDate;
                    var Moddate = content.Moddate;
                    var NewcreationDate = new Date(parseInt(creationDate.substr(6)));
                    var NewModdate = new Date(parseInt(Moddate.substr(6)));
                    var formattedCreatedDate = NewcreationDate.getDate() + "-" + (NewcreationDate.getMonth() + 1) + "-" + NewcreationDate.getFullYear();
                    var formattedModDate = NewModdate.getDate() + "-" + (NewModdate.getMonth() + 1) + "-" + NewModdate.getFullYear();

                    if (content.Size == null) {
                        content.Size = "-";
                    }
                    var isImageExtn = isImage(content.Extn.toLowerCase());
                    str += '<tr folderId="' + content.ObjectId + '"AssignedPermission="' + content.permString + '"   folderName = "' + content.Name + '" fileLineage="' + content.Lineage + '">';
                    str += '<td><input type="checkbox" name="id[]" value="" onchange="enableMultiDocDownload()"></td>';
                    var IndexPath = content.IndexPath;
                    if (IndexPath.length > 10)
                        IndexPath = IndexPath.substring(0, 10) + '..';
                    if (content.permString == "Open" || content.permString == "View") {
                        str += '<td  title="' + content.IndexPath + '" style="font-style: italic; font-weight:bold;">1.' + IndexPath + '</td>';

                    }
                 
                    else if (content.Extn == "PDF" || isImageExtn == true) {

                        str += '<td title="' + content.IndexPath + '">' + '<a  style="font-style: italic; font-weight:bold;" class="DownloadLinkClass" href="/UserWorkSpace/openFile?objectId={0}&extn={1}"'.replace('{0}', content.ObjectId).replace('{1}', content.Extn.toLowerCase()) + '" target="_blank">' + IndexPath + '</a></td>';

                    }
                    else {
                        str += '<td title="' + content.IndexPath + '">' + '<a class="DownloadLinkClass"  style="font-style: italic; font-weight:bold;" href="/UserWorkSpace/DownloadFile?objectId=' + content.ObjectId + '">'
                                                                + IndexPath + '</a></td>';

                    }
                  
                    if (content.permString=="Open" || content.permString=="View" )
                    {
                        str += '<td id="contentName" title="' + content.Name + '">' + content.Name + '</td>';
                   
                    }
                    else if (content.Extn == "PDF" || isImageExtn == true) {
                       
                       // str += '<td id="contentName" style="display:none">' + </td>';

                        //str += '<td id="contentName" style="display:none">' + '<a  multipleDownload = "true"  class="DownloadLinkClass" href="/UserWorkSpace/downloadSelectedFile?objectIdString=' + objectIdString + '"></a></td>';
                        str += '<td id="contentName" title="' + content.Name + '">' + '<a  allowDownload = "true"  class="DownloadLinkClass" href="/UserWorkSpace/DownloadFile?objectId=' + content.ObjectId + '">'
                                                            + content.Name + '</a>' +
                            '<a class="DownloadLinkClass" href="/UserWorkSpace/openFile?objectId={0}&extn={1}"'.replace('{0}', content.ObjectId).replace('{1}', content.Extn.toLowerCase()) + '" target="_blank">'+
                            '</a><a  multipleDownload = "true"  class="DownloadLinkClass" href="/UserWorkSpace/downloadSelectedFile?objectIdString=' + objectIdString + '"></a></td>';

                    }
                    else {
                        str += '<td id="contentName" title="' + content.Name + '">' + '<a class="DownloadLinkClass" href="/UserWorkSpace/DownloadFile?objectId=' + content.ObjectId + '">'
                                                                 + content.Name + '</a></td>';     
                    }
                             
                    var ShareWithUser = content.SharedWithUsers;
                    if (ShareWithUser.length > 15)
                        ShareWithUser = ShareWithUser.substring(0, 15) + '..';
                    if (content.permString == "Open" || content.permString == "View") {
                        str += '<td title="' + content.SharedWithUsers + '"> ' + ShareWithUser + '</td>';
              
                    }
                    else if (content.Extn == "PDF" || isImageExtn == true) {

                        str += '<td title="' + content.SharedWithUsers + '" >' + '<a class="DownloadLinkClass" href="/UserWorkSpace/openFile?objectId={0}&extn={1}"'.replace('{0}', content.ObjectId).replace('{1}', content.Extn.toLowerCase()) + '" target="_blank">' + ShareWithUser + '</a></td>';

                    }
                    else {
                        
                        str += '<td title="' + content.SharedWithUsers + '">' + '<a class="DownloadLinkClass" href="/UserWorkSpace/DownloadFile?objectId=' + content.ObjectId + '">'
                                                                 + ShareWithUser + '</a></td>';
                    }
                    var imageLink = PHARMAACE.FORECASTAPP.UTILITY.getImageForFileType(content.Extn.toLowerCase());               

                    if (content.permString == "Open" || content.permString == "View") {
                        str += '<td style="text-align:center;">' + '<img src="' + imageLink + '" class="img-thumbnail"  style="height:32px;" title="' + content.Extn.toLowerCase() + '"><div class="hidtext">'+ content.Extn.toLowerCase() +'</div> </td>'

                    }
                    else if (content.Extn == "PDF" || isImageExtn == true) {

                        str += '<td style="text-align:center">' + '<a class="DownloadLinkClass" href="/UserWorkSpace/openFile?objectId={0}&extn={1}"'.replace('{0}', content.ObjectId).replace('{1}', content.Extn.toLowerCase()) + '" target="_blank"><img src="' + imageLink + '" class="img-thumbnail" style="height:32px;" title="' + content.Extn.toLowerCase() + '"><div class="hidtext">' + content.Extn.toLowerCase() + '</div> </a></td>';

                    }

                    else {
                        str += '<td style="text-align:center">' + '<a class="DownloadLinkClass" href="/UserWorkSpace/DownloadFile?objectId=' + content.ObjectId + '"><img src="' + imageLink + '" class="img-thumbnail" style="height:32px;" title="' + content.Extn.toLowerCase() + '"><div class="hidtext">' + content.Extn.toLowerCase() + '</div></a></td>';
                    }
                    if (content.permString == "Open" || content.permString == "View") {
                        str += '<td style="text-align:center"> ' + formattedCreatedDate + '</td>';
                    }
                    else
                        if (content.Extn == "PDF" || isImageExtn == true) {

                            str += '<td style="text-align:center">' + '<a class="DownloadLinkClass" href="/UserWorkSpace/openFile?objectId={0}&extn={1}"'.replace('{0}', content.ObjectId).replace('{1}', content.Extn.toLowerCase()) + '" target="_blank">' + formattedCreatedDate + '</a></td>';

                        }
                    else

                    {
                            str += '<td style="text-align:center">' + '<a class="DownloadLinkClass" href="/UserWorkSpace/DownloadFile?objectId=' + content.ObjectId + '">' + formattedCreatedDate + '</a></td>';
                    }
                    //if (content.permString == "Open" || content.permString == "View") {
                    //    str += '<td> ' + formattedModDate + '</td>';
                    //}
                    //else {
                    //    str += '<td>' + '<a class="DownloadLinkClass" href="/UserWorkSpace/DownloadFile?objectId=' + content.ObjectId + '">' + formattedModDate + '</a></td>';
                    //}
                    //i
                    if (content.permString == "Open" || content.permString == "View") {
                   str += '<td style="text-align:center;">' + content.Size + '</td>';
                    }
                    else if (content.Extn == "PDF" || isImageExtn == true) {

                        str += '<td style="text-align:center">' + '<a class="DownloadLinkClass" href="/UserWorkSpace/openFile?objectId={0}&extn={1}"'.replace('{0}',content.ObjectId).replace('{1}', content.Extn.toLowerCase()) + '" target="_blank">' + content.Size + '</a></td>';

                    }
                    else
                    {
                        //str += '<td style="text-align:center">' + '<a class="DownloadLinkClass" href="/UserWorkSpace/openFile?objectId={0}&ty={1}"'.replace('{0}', content.ObjectId).replace('{1}', content.Extn) + '">' + content.Size + '</a></td>';
                        str += '<td style="text-align:center">' + '<a class="DownloadLinkClass" href="/UserWorkSpace/DownloadFile?objectId=' + content.ObjectId + '">' + content.Size + '</a></td>';
                    }
                   
                   
                   
                    str += '</tr>';
                    i = i + 1;
                })
                //tableRef.innerHTML = "";
                tableRef.innerHTML = satr2+str+str3;
               // tableRef.draw();
                hideOverlay(true, 'editableWorkSpace');

                // loadingUserworkspaceTable();
                addContextMenu();
                var columnList;
                                var table = $('#userworkspaceTable' + random).DataTable({
                    "bPaginate": false,
                    "retrieve": true,
                    "bLengthChange": false,
                    "bInfo": false,
                    "bFilter": true,
                    
                    "dom": 'Rl<"top"i>rt<"custom-filter-bottom"flp><"clear">',
                    'columnDefs': [{
                        
                     "bSortable": false, 
                     "aTargets": [0] ,
                        'searchable': false,
                        'orderable': false,
                        'className': 'dt-body-center',
                        'render': function (data, type, full, meta) {
                            return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';
                        }
                    }]
                });

                                
                
                $('#userworkspaceTable' + random+' thead th').each(function (e) {
                    var title = $(this).text();
                    var index = $(this).index();
                    if (!(index == 0))
                    {
                        columnList += "<option class='toggle-vis' data-column='" + (index) + "'>" + title + "</option>";
                    }
                    
                    if (!((index == 1) || (index == 0) || (index == 6)))
                        $(this).html(title + "<br>" + '<input type="text" style="width:120px;height:28px;"  placeholder="Search" onclick="PHARMAACE.FORECASTAPP.UTILITY.stopPropagation(event);" onmousedown="PHARMAACE.FORECASTAPP.UTILITY.stopPropagation(event)" />');
                });
                table.columns(':gt(0)').eq(0).each(function (t) {
                    $('input', table.column(t).header()).on('keyup change', function () {
                        table.column(t)
                                .search(this.value.replace(/(;|,)\s?/g, "|"), true, false)
                                .draw();
                    });
                });

                $('#showhide').html('<select class="selectpicker"   title="Hide" id="byshowhide" multiple>' + columnList + '</select>');
                $('#example-select-all').on('click', function () {
                  
                    $('input[type="checkbox"]').prop('checked', this.checked);
                });
                $('#byshowhide').selectpicker();
                setTimeout(function () {
                    // Do something after 5 seconds
                    $('#showhide .bootstrap-select li').attr('onclick', 'fnshowhide(event,this)');
                }, 3000);
                //$('#userworkspaceTable thead').on('click', 'input[type="checkbox"]', function () {
                //    if (this.checked) {
                //        $('#userworkspaceTable input[type="checkbox"]').prop('checked', this.checked);
                //    }
                //});
                $('#userworkspaceTable' + random + ' tbody').on('change', 'input[type="checkbox"]', function () {
                    // If checkbox is not checked
                    if (!this.checked) {
                        var el = $('#example-select-all').get(0);
                        // If "Select all" control is checked and has 'indeterminate' property
                        if (el && el.checked && ('indeterminate' in el)) {
                            // Set visual state of "Select all" control 
                            // as 'indeterminate'
                            el.indeterminate = true;
                        }
                    }
                });


                //applyColumnFilter(table, 'userworkspaceTable');
            }

            function dayFilterForReporting() {

                if ($('#last3daysrep').is(':checked') == true) {
                    var days = 3; // Days you want to subtract
                    var date = new Date();
                    var Startlast = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));
                    var Startday = Startlast.getDate();
                    var Startmonth = Startlast.getMonth() + 1;
                    var Startyear = Startlast.getFullYear();

                    var Endlast = new Date(date.getTime());
                    var Endday = Endlast.getDate();
                    var Endmonth = Endlast.getMonth() + 1;
                    var Endyear = Endlast.getFullYear();

                    var StartDate = Startmonth + "-" + Startday + "-" + Startyear;
                    var EndDate = Endmonth + "-" + Endday + "-" + Endyear;
                    applyDaysForReporting(Startlast, Endlast);

                }

                if ($('#last7daysrep').is(':checked') == true) {
                    var days = 7; // Days you want to subtract
                    var date = new Date();
                    var currentdate = new Date(date.getTime);
                    var Startlast = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));
                    var Startday = Startlast.getDate();
                    var Startmonth = Startlast.getMonth() + 1;
                    var Startyear = Startlast.getFullYear();

                    var Endlast = new Date(date.getTime());
                    var Endday = Endlast.getDate();
                    var Endmonth = Endlast.getMonth() + 1;
                    var Endyear = Endlast.getFullYear();

                    var StartDate = Startmonth + "-" + Startday + "-" + Startyear;
                    var EndDate = Endmonth + "-" + Endday + "-" + Endyear;
                    applyDaysForReporting(Startlast, Endlast);

                }
                if ($('#last30daysrep').is(':checked') == true) {

                    var days = 30; // Days you want to subtract
                    var date = new Date();
                    var Startlast = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));
                    var Startday = Startlast.getDate();
                    var Startmonth = Startlast.getMonth() + 1;
                    var Startyear = Startlast.getFullYear();

                    var Endlast = new Date(date.getTime());
                    var Endday = Endlast.getDate();
                    var Endmonth = Endlast.getMonth() + 1;
                    var Endyear = Endlast.getFullYear();

                    var StartDate = Startmonth + "-" + Startday + "-" + Startyear;
                    var EndDate = Endmonth + "-" + Endday + "-" + Endyear;
                    applyDaysForReporting(Startlast, Endlast);

                }
                if ($('#filter-rangeforreport').is(':checked') == true) {

                    var StartDate = document.getElementById("datepicker-startforreport").value;
                    StartDate = StartDate.replace(',', '');
                    var st = StartDate.split(' ');
                    StartDate = st[0] + "-" + st[1] + "-" + st[2];

                    var EndDate = document.getElementById("datepicker-endforreport").value;
                    EndDate = EndDate.replace(',', '');
                    st = EndDate.split(' ');
                    EndDate = st[0] + "-" + st[1] + "-" + st[2];
                    applyDaysForReporting(StartDate, EndDate);

                }


            }

       
            function fetchFilesFromReporting(contents) {
                var tableRef = document.getElementById('ReportDiv');

                var str = '';
                var str2 = '';
                var str3 = '';
                var i = 1;
                var yoursystemday = new Date(new Date().getTime() - (120000 * 60 + new Date().getTimezoneOffset() * 60000));
                var random = Math.round(Math.round(yoursystemday));

                satr2 = '<table id="ReportworkspaceTable' + random + '" class="table table-striped select" cellspacing="0" width="100%" ><thead><tr><th>User</th><th>File Name</th><th>Main Folder</th><th>Activity Date</th><th>Custom Message</th></tr></thead>';
                satr3 = '</tbody></table>';

                contents.forEach(function (content) {
                    var mainName = "";
                    if (content.MainFolderName == null) {
                        mainName = "-";
                    }
                    else {
                        mainName = content.MainFolderName;
                    }
                    var ext = content.Extn;
                    var extension = content.type;
                    var actdate = content.ActivityDate;
                    var NewActDate = new Date(parseInt(actdate.substr(6)));
                    var minutes = NewActDate.getMinutes().toString();
                    if (minutes.length == 1)
                    {
                        minutes = "0" + minutes;
                    }
                    var Hours = NewActDate.getHours().toString();
                    if (Hours.length == 1) {
                        Hours == "0" + Hours;
                    }

                    var formattedActDate = NewActDate.getDate() + "-" + (NewActDate.getMonth() + 1) + "-" + NewActDate.getFullYear() + " " + "[" + NewActDate.getHours() + ":" + minutes + "]";

                    str += '<tr actdate="' + NewActDate + '">';
                   // str += '<td>' + i + '</td>';
                    str += '<td>' + content.FullName + '</td>';
                    str += '<td id="contentName">' + '<a href="/UserWorkSpace/DownloadFile?objectId=' + content.ObjectId + '">'
                                                  + content.Name + content.Extn + '</a></td>';
                    str += '<td>' + mainName + '</td>';
                    str += '<td>' + formattedActDate + '</td>';
                    str += '<td>' + content.CustomMessage + '</td>';
                    str += '</tr>';
                    i = i + 1;
                });
               

                tableRef.innerHTML = satr2 + str + str3;
                var columnList;
                var table = $('#ReportworkspaceTable' + random).DataTable({
                    //"bPaginate": false,                   
                    //"bInfo": false,
                    //"bFilter": false,
                    
                });
                dayFilterForReporting();
            }


            function callEditableWorkSpaceJSON(objectId, lineage) {
                if (lineage.toString().trim() == "0")
                {
                    var ProjectLi = document.getElementById("LiUploadDoc");
                   
                    $('#LiUploadDoc').addClass('deactivateUploadDoc');
                    var fileUploader = document.getElementById("upload-file-selector");
                    fileUploader.type = "";
                }
                else {
                    var ProjectLi = document.getElementById("LiUploadDoc");
                    $('#LiUploadDoc').removeClass('deactivateUploadDoc');
                    var fileUploader = document.getElementById("upload-file-selector");
                    fileUploader.type = "file";
                }
                $('#tree2 li').removeClass('selected');
                $('#' + objectId).addClass('selected');
                if ($('#tree2' + ' #' + objectId).parent().parent().hasClass('firstLi'))
                    $('#tree2' + ' #' + objectId).parent().parent().addClass('selected');
                selectedFolderId = objectId;
                selectedLineage = lineage;
                lineageForSpan = lineage;              
                showOverlay("Please wait fetching the project content...", 'editableWorkSpace', '15', '');
                PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/GetEditableWorkSpaceJSON", { ObjectId: objectId, lineage: lineage },
                        function (result) {
                            if (result.success) {
                                addFileFolders(result.ContentFolderList);
                                hideOverlay(true, 'editableWorkSpace');

                            }
                            else
                            {
                                hideOverlay(true, 'editableWorkSpace');
                                PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                                
                            }
                               
                               
                        },
                        function (result) {

                            hideOverlay(true, 'editableWorkSpace');
                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                           
                        });
            }
            
            function  getSelProjForReportingDropdown()
            {
                
                var objectId = $("#byproject option:selected").attr("objId");
                var lineage = $("#byproject option:selected").attr("lineageId");
                getFilesForReporting(objectId, lineage);
            }
           
           
            
            function getFilesForReporting(objectId, lineage) {
               
                $("#tree6 li").each(function () {
                    
                    var r = $(this).attr('objid')
                    if (r == objectId) {
                     
                        PreText = $(this).text();  
                    }
                });

                $("#tree6 li").each(function () {
                   
                    if ($(this).text() == PreText) {
                        $(this).css("background-color", "#d4d4d4");
                    }
                    if ($(this).text() != PreText) {
                        $(this).css("background-color", "#fff");
                       
                    }
                });
                selectedFolderId = objectId;
              //  selectedLineage = lineage;
                showOverlay("Please wait while we are getting project data ...", 'editableWorkSpace', '15', '');
                PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/GetActivityDetailJSON", { ObjectId: objectId, lineage: lineage },
                        function (result) {
                            if (result.success) {
                                hideOverlay(true, 'editableWorkSpace');
                                fetchFilesFromReporting(result.ContentFileList);
                            }
                            else {
                                hideOverlay(true, 'editableWorkSpace');
                                PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');

                            }
                        },
                        function (result) {
                            hideOverlay(true, 'editableWorkSpace');
                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                        });
               // dayFilterForReporting();
            }
            function applyDaysForReporting(startdate, enddate) {

                var tableid = $('#ReportDiv table').attr('id');
                var tableRef = $('#' + tableid);


               // var tableRef = $('#ReportworkspaceTable')
                tableRef.find('tr').each(function () {
                    $(this).show();

                });

                tableRef.find('tr').each(function () {
                    $(trow).css("display", "none");
                    var startDate = new Date(startdate);
                    var endDate = new Date(enddate);
                    var trow = $(this);
                    var activityDate = new Date($(this).attr("actdate"));

                    if (activityDate < startDate || activityDate > endDate) {
                        $(trow).css("display", "none");
                    }

                });
                startendcount=0;
            }


        function showReporting()
            {
           
            $('#showhide').css("display", "none");
            $('#custom-search-input').css("display", "none");
            $('#treeforfolderlist').css("display", "none");
            $('#treeforAdvSearch').css("display", "none");
            $('#searchFromList').css("display", "none");
            $('#leftmenu').css("display", "block");
            $('#tabAttr').css("display", "none");
            $('#treeforReporting').css("display", "block");
            $('#addnewproject').css("display", "none");
            $('#searchButton').css("display", "none");
            
            document.getElementById("editableWorkSpace").className = "col-md-9";
            $.ajax({
                "url": "UserWorkSpace/LeftPaneReportingView",
                "success": function (result) {
                    $('#treeforReporting').html(result);
                }
            });
        }

        function showAdvSearch() {

            $('#LiUploadDoc').addClass('deactivateUploadDoc');
            var fileUploader = document.getElementById("upload-file-selector");
            fileUploader.type = "";

            var tableid = $('#drop table').attr('id');
            $('#' + tableid).find('tr').each(function () {
                var attr = $(this).attr('folderid');
                if (typeof attr !== typeof undefined && attr !== false) {
                    $(this).remove();
                }
            });
            $('#searchButton').css("display", "block");
            $('#treeforfolderlist').css("display", "none");
            $('#treeforAdvSearch').css("display", "block");
            $('#treeforReporting').css("display", "none");
            $('#searchFromList').css("display", "block");
            $('#tabAttr').removeAttr('style');
            $('#addnewproject').css("display", "none");
            $('#searchFromList').css("display", "none");
            // $('#custom-search-input').css("display", "block");
            $('#treeforAdvSearch').html('');
            $('#leftmenu').css("display", "block");
            $('.leftBox').css("display", "none");
            $('#advFilter').css("display", "block");
            
            document.getElementById("leftmenu").className = "col-md-3";
            document.getElementById("editableWorkSpace").className = "col-md-9";



            $.ajax({
                "url": "UserWorkSpace/LeftPaneSearchView",
                "success": function (result) {
                    $('#treeforAdvSearch').html(result);
                    // $('#searchcheckbox').css("display", "block");
                }
            });

        }

        function callLeftPaneFolderView(objectId, lineage, isSearchView) {
            var SpanId = "Span" + objectId;
            var fisrSpanId = "SpanFirst" + objectId;
            var spanEl = document.getElementById(SpanId);
            var SpanFirst = document.getElementById(fisrSpanId);
            var selectedLi = document.getElementById(objectId);
            sequenceSet = $(selectedLi).attr('sequence');


            var SpanClassName = spanEl.className;
        
            if (SpanClassName == "fa fa-chevron-down") {
              
                $.ajax({
                    "url": "UserWorkSpace/LeftPaneFolderView",
                    "data":
                        {
                            'ObjectId': objectId,
                            'lineage': lineage,
                            'isSearchView': isSearchView
                        },
                    "success": function (result) {
                        $("#" + objectId).append(result);
                        
            
                    }
                });

                spanEl.className = "fa fa-chevron-up";
                SpanFirst.className = "glyphicon glyphicon glyphicon-folder-open";

            }
            else if (SpanClassName == "fa fa-chevron-up") {
                var x;
                var li = document.getElementById(objectId);
                var ul = li.getElementsByTagName(
                    "ul")
                for (i = 0; i < ul.length; i++) {
                    x = ul[i];
                    // x.style.display = "none";
                    
                   x.parentNode.removeChild(x);
                }
                //foldericon();

                spanEl.className = "fa fa-chevron-down";
                SpanFirst.className = "glyphicon glyphicon glyphicon-folder-close";

            }
        }
        
        function callLeftPaneFolderViewWithIndex(objectId, lineage, parentIndex) {
          
            var SpanId = "Span" + objectId;
            var fisrSpanId = "SpanFirst" + objectId;
            var spanEl = document.getElementById(SpanId);
            var SpanFirst = document.getElementById(fisrSpanId);
            var selectedLi = document.getElementById(objectId);
            
            sequenceSet = $(selectedLi).attr('sequence');
            
            var SpanClassName = spanEl.className;

            if (SpanClassName == "fa fa-chevron-down") {

                $.ajax({
                    "url": "UserWorkSpace/LeftPaneFolderViewWithIndex",
                    "data":
                        {
                            'ObjectId': objectId,
                            'lineage': lineage,
                            'parentIndex': sequenceSet
                        },
                    "success": function (result) {
                        var li = document.getElementById(objectId);
                        var ul = li.getElementsByTagName(
                            "ul")

                        if (ul.length <= 0) {
                            $("#" + objectId).append(result);
                        }
                    }
                });

                spanEl.className = "fa fa-chevron-up";
                SpanFirst.className = "glyphicon glyphicon glyphicon-folder-open";

            }
            else if (SpanClassName == "fa fa-chevron-up") {
                var x;
                var li = document.getElementById(objectId);
                var ul = li.getElementsByTagName(
                    "ul")
                for (i = 0; i < ul.length; i++) {
                    x = ul[i];
                   // x.style.display = "none";
                    //x.remove();

                    //  var node = document.getElementsByClassName('info')[i];
                   x.parentNode.removeChild(x)
                  
                }
                //foldericon();

                spanEl.className = "fa fa-chevron-down";
                SpanFirst.className = "glyphicon glyphicon glyphicon-folder-close";

            }
        }
        function listOfPermissions() {
          
            permissionsArr = [];

            PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/fetchPermission", {},
                               function (result) {

                                   if (result.success) {
                                       var permsn = result.Permission;

                                       for (var j = 0 ; j < permsn.length ; j++) {
                                           var act = { Name: "", Id: "" }
                                           act.Name = permsn[j].Name;
                                           act.Id = permsn[j].ID;
                                           permissionsArr.push(act);
                                       }
                                       PHARMAACE.FORECASTAPP.SHARE.checkShareType(shareType);                                       
                                       PHARMAACE.FORECASTAPP.SHARE.validate(e);
                                   }
                                   else
                                       PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                               },
                                 function (result) {
                                     PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                                 }
                               );           
            return permissionsArr;
        }
                
        function buildUserForecastMappingForShare() {
            userForecastMappingForShare = [];
           //var ObjectId = 0;
            $('#prdverid tr.innerTrShareForcast').each(function () {
                var UserId = $(this).find('td:nth-child(3)').text();

                var authLevel = $(this).find('select option:selected').attr('id');

                userForecastMappingForShare.push(buildUserForecastToShare(UserId, authLevel, ObjectIdForShare));

            });
        }

        function UnshareItem(UserId) {
            // ObjectIdForShare
            alert('init');
            $.ajax({
                "url": "UserWorkSpace/UnshareItem",
                "data":
                    {
                        'objectId': ObjectIdForShare,
                        'userId': UserId,                        
                    },
                "success": function (result) {
                    if (result == "1") {
                        var mytable = $('#prdverid');

                        mytable.find('tr').each(function () {
                            var trow = $(this);
                            if ($(this).attr("unShareId") == UserId) {
                                $(this).remove();

                            }
                        });
                    }
                }
            });
        }

            function shareDocumentWithSelectedUsers() {
                
                buildUserForecastMappingForShare();
               
                shareDocumentWithUsers(userForecastMappingForShare);
            }


            function buildUserForecastToShare(UserId,Permission, ObjectId) {
                var userForecast;
                
                userForecast = {
                    Permission: Permission,
                    ObjectId: ObjectId,
                    UserId: UserId

                };

                return userForecast;
            }


            function shareDocumentWithUsers(userForShare) {
                var postData = JSON.stringify({ "userForShare": userForShare });
                PHARMAACE.FORECASTAPP.SERVICE.postJsonData("/UserWorkSpace/Share", postData,
       function (result) {
           if (result.success) {
              
               PHARMAACE.FORECASTAPP.UTILITY.popalert("Successfully Shared", '');
           }
           else {
               hideOverlay();
               showEDraw();
               PHARMAACE.FORECASTAPP.UTILITY.popalert("Could not Share", '');
           }
       },
       function (result) {
           hideOverlay();
           showEDraw();
           PHARMAACE.FORECASTAPP.UTILITY.popalert("Could not Share", '');
       });
            }
            function autocompleteClick(current)//dynamically added function to autocomplete list
            {
                var selectedEmail = undefined;
                var flagForShare = false;
                if ($('#prdverid tr.innerTrShareForcast').length > 0) {
                    var flagForShare = PHARMAACE.FORECASTAPP.SHARE.checkUserAlreadyAdded(current);
                }
                else
                    selectedEmail = (current.innerText).toString();
                if (flagForShare == false)
                    PHARMAACE.FORECASTAPP.SHARE.validate(undefined, selectedEmail);
            }
            function pressed() {
                if (typeOfObjectShare == "Folder") {
                    PHARMAACE.FORECASTAPP.SHARE.listofPermissions(folderpermissionsArr);
                }
                else if ((typeOfObjectShare == "File")) {
                    PHARMAACE.FORECASTAPP.SHARE.listofPermissions(filepermissionArr);
                }

                PHARMAACE.FORECASTAPP.SHARE.checkShareType(shareType);
                PHARMAACE.FORECASTAPP.SHARE.generalizedPressedFun(event);
                /* PHARMAACE.FORECASTAPP.SHARE.addAutocompleteFunctionForClick(e);
 
                 if (e.keyCode === 13) {
                 e.preventDefault();
                 
                 var flagForShare = PHARMAACE.FORECASTAPP.SHARE.checkUserAlreadyAdded(e);
                 if (flagForShare==false)
                 PHARMAACE.FORECASTAPP.SHARE.validate(e,"");                               
             }*/
            }
        function searchFromList(e) {
               
            var searchonId = "searchFromList";
            var searchById = "tree2";
            PHARMAACE.FORECASTAPP.UTILITY.searchFromList(searchonId, searchById);

                    // Declare variables
                    //var input, filter, ul, li, a, i;
                    //input = document.getElementById('searchFromList');
                    //filter = input.value.toUpperCase();

                    //ul = document.getElementById("tree2");
                    //li = ul.getElementsByTagName('li');
                    //for (i = 0; i < li.length; i++) {
                    //    a = li[i].getElementsByTagName("a")[0];
                    //    // a = li[i];
                    //    if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
                         
                    //        li[i].style.display = "list-item";

                    //    } else {
                    //        li[i].style.display = "none";
                    //    }
                    //}
        }
             


                $(document).ready(function () {

                    $('#LiUploadDoc').addClass('deactivateUploadDoc');
                    var fileUploader = document.getElementById("upload-file-selector");
                    fileUploader.type = "";

                    $('#LiDownloadDoc').addClass('deactivateUploadDoc');
                   
                    $('#LiShareDoc').addClass('deactivateUploadDoc');
                   

                    $("#currency").bind("change", function ()
                    {
                        var currency = $("#currency option:selected").text();

                        if (currency=="Dollar") {

                            document.getElementById('deal').placeholder = "$ Value";

                        }
                        else if (currency == "Pound") {
                            document.getElementById('deal').placeholder = "£ Value";

                        }
                        else if (currency == "Euro") {
                            document.getElementById('deal').placeholder = "€ Value";
                        }
                        else if (currency == "Rupee")
                        {
                            document.getElementById('deal').placeholder = "₹ Value";
                        }
                    });


                    PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/fetchPermission", {},
                             function (result) {
                                 if (result.success) {
                                     var permsn = result.Permission;

                                     for (var j = 0 ; j < permsn.length ; j++) {
                                         var act = { Name: "", Id: "" }
                                         act.Name = permsn[j].Name;
                                         act.Id = permsn[j].ID;
                                         permissionsArr.push(act);
                                     }                                    

                                 }
                                 else
                                     PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                             },
                               function (result) {
                                   PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                               }
                             );
                    PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/fetchFilePermission", {},
                            function (result) {
                                if (result.success) {
                                    var permsn = result.Permission;

                                    for (var j = 0 ; j < permsn.length ; j++) {
                                        var act = { Name: "", Id: "" }
                                        act.Name = permsn[j].Name;
                                        act.Id = permsn[j].ID;
                                        filepermissionArr.push(act);
                                    }

                                }
                                else
                                    PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                            },
                              function (result) {
                                  PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                              }
                            );
                    PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/fetchFolderPermission", {},
                            function (result) {
                                if (result.success) {
                                    var permsn = result.Permission;

                                    for (var j = 0 ; j < permsn.length ; j++) {
                                        var act = { Name: "", Id: "" }
                                        act.Name = permsn[j].Name;
                                        act.Id = permsn[j].ID;
                                        folderpermissionsArr.push(act);
                                    }

                                }
                                else
                                    PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                            },
                              function (result) {
                                  PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                              }
                            );







                    $("#last3daysrep").click(function () {
                        dayFilterForReporting();
                    });

                    $("#last7daysrep").click(function () {
                        dayFilterForReporting();
                    });

                    $("#last30daysrep").click(function () {
                        dayFilterForReporting();
                    });

                    $("#customdaterangerep").click(function () {
                        dayFilterForReporting();
                    });

                    PHARMAACE.FORECASTAPP.SHARE.loadAutocompleteData();
                    PHARMAACE.FORECASTAPP.SHARE.loadUsers();
                   // PHARMAACE.FORECASTAPP.SHARE.autocompleteForUsers();
                    // $(document).bind('keypress', pressed);
                    //$('#autocompleteSearchBox').bind('keypress', pressed);


                    $(".icon-input-btn").each(function () {
                        var btnFont = $(this).find(".btn").css("font-size");
                        var btnColor = $(this).find(".btn").css("color");
                        $(this).find(".glyphicon").css("font-size", btnFont);
                        $(this).find(".glyphicon").css("color", btnColor);
                        if ($(this).find(".btn-xs").length) {
                            $(this).find(".glyphicon").css("top", "24%");
                        }
                    });

                    //$('#myCarousel').carousel({
                    //    interval: 4000
                    //});
                    //('#myCarousel').carousel({});
                    
    //                $("#editableWorkSpace .dropdown").hover(
    //    function () {
    //        $('.dropdown-menu', this).not('.in .dropdown-menu').stop(true, true).slideDown("400");
    //        $(this).toggleClass('open');
    //    },
    //    function () {
    //        $('.dropdown-menu', this).not('.in .dropdown-menu').stop(true, true).slideUp("400");
    //        $(this).toggleClass('open');
    //    }
    //);
                    var clickEvent = false;
                    $('#myCarousel').on('click', '.nav a', function () {
                        clickEvent = true;
                        $('.nav li').removeClass('active');
                        $(this).parent().addClass('active');
                    });
                    $('#BSbtninfo').filestyle({
                        buttonName: 'btn-info',
                        buttonText: ' Select a File'
                    });
                    //$('.fa-filter').click(function () {

                    //    $('.shSearch').toggle();
                    //});

            $('#editableWorkSpace .nav li a').click(function () {
                $('.nav li').removeClass('active');
                $(this).parent().addClass('active');
            });

            var i = 0;
            var dragging = false;
            $('#dragbar').mousedown(function (e) {
                e.preventDefault();
               
                dragging = true;
                var main = $('#editableWorkSpace');
                var ghostbar = $('<div>',
                                 {
                                     id: 'ghostbar',
                                     css: {
                                         //height: main.outerHeight(),
                                         top: main.offset().top,
                                         left: main.offset().left
                                     }
                                 }).appendTo('body');
             
                $(document).mousemove(function (e) {
                    ghostbar.css("left", e.pageX + 2);
                });

            });

            $(document).mouseup(function (e) {
                if (dragging) {
                    var percentage = (e.pageX / window.innerWidth) * 100;
                    var mainPercentage = 100 - percentage;

                    // $('#console').text("side:" + percentage + " main:" + mainPercentage);
                    if (percentage > 2.4) {
                        if (percentage <= 10) {

                           
                            if (!$('#leftmenu').hasClass("toggled")) {
                                $("#leftmenu").toggleClass("toggled");
                                $("#editableWorkSpace").toggleClass("toggled");
                                $('#workspaceSlider i.fa').removeClass('fa-chevron-left').addClass('fa-chevron-right');
                                $('#workspaceSlider i.fa').attr('title', 'Expand');
                            }
                           
                        }
                        else {
                            if ($('#leftmenu').hasClass("toggled")) {
                                $("#leftmenu").toggleClass("toggled");
                                $("#editableWorkSpace").toggleClass("toggled");
                                $('#workspaceSlider i.fa').removeClass('fa-chevron-right').addClass('fa-chevron-left');
                                $('#workspaceSlider i.fa').attr('title', 'Collapse');
                            }
                        }
                        if (percentage < 40) {
                            if (percentage > 27) {
                                $('#leftmenu').css("width", percentage + "%");
                                $('#editableWorkSpace').css("width", mainPercentage + "%");
                            }
                        }
                        //$('#leftmenu').css("width", percentage + "%");
                        //$('#editableWorkSpace').css("width", mainPercentage + "%");
                    }
                    
                    $('#ghostbar').remove();
                    $(document).unbind('mousemove');
                    dragging = false;
                }
            });


            $("#tree2").niceScroll({
                cursorfixedheight: 70,
                cursorcolor: "#F00",
                autohidemode: false
            });
            $("#treeforAdvSearch").niceScroll({
                cursorfixedheight: 70
            });
            
            
            $("#workspaceView li").on("click", function () {
                //$("#workspaceView li").removeClass("active");
                //$(this).addClass("active");
            });
            $("#workspaceSlider li i.fa").on("click", function (e) {
                e.preventDefault();
                if ($('#workspaceSlider i.fa').attr('title') == "Collapse") {
                    $('#workspaceSlider i.fa').removeClass('fa-chevron-left').addClass('fa-chevron-right');
                    $('#workspaceSlider i.fa').attr('title', 'Expand');
                }
                else {
                    $('#workspaceSlider i.fa').removeClass('fa-chevron-right').addClass('fa-chevron-left');
                    $('#workspaceSlider i.fa').attr('title', 'Collapse');
                }
                $("#leftmenu").toggleClass("toggled").removeAttr('style');
                $("#editableWorkSpace").toggleClass("toggled").removeAttr('style');
                
            });
            $('#verticalTitle a').click(function () {
                $("#leftmenu").toggleClass("toggled").removeAttr('style');
                $("#editableWorkSpace").toggleClass("toggled").removeAttr('style');
            })
           
            
            $('#tree2').treed({ openedClass: 'glyphicon-folder-open', closedClass: 'glyphicon-folder-close' });
            $('ul ul ul li.branch .glyphicon-folder-close').click(function (e) {
                e.preventDefault();
                $('li').removeClass('liselected');
                $(this).parent().addClass('liselected');
            });
            //$('.carousel-sync').on('slide.bs.carousel', function (ev) {
            //    var dir = ev.direction == 'right' ? 'prev' : 'next';
            //    $('.carousel-sync').not('.sliding').addClass('sliding').carousel(dir);                
            //});
            //$('.carousel-sync').on('slid.bs.carousel', function (ev) {
            //    $('.carousel-sync').removeClass('sliding');
            //});
                });            
       








        function fnshowhide(e, current) {
            // e.preventDefault();
            var tableid = $('#drop table').attr('id');
            var table = $('#' + tableid).DataTable();
            // alert(current.selectedIndex);
            //var column = table.column(current.selectedIndex + 1);
            var column = table.column(parseInt(current.getAttribute('data-original-index')) + 1);
            column.visible(!column.visible());

            //if (($('#lastSelected').val() != (current.getAttribute('data-original-index') + 1))) {

            //    if ($('option[data-column]').hasClass('active'))
            //        if ($('option[data-column=' + (current.getAttribute('data-original-index') + 1) + ']').hasClass('active'))
            //            $('option[data-column=' + (current.getAttribute('data-original-index') + 1) + ']').removeClass('active');
            //        else
            //            $('option[data-column=' + (current.getAttribute('data-original-index') + 1) + ']').addClass('active');
            //    else
            //        $('option[data-column=' + (current.getAttribute('data-original-index') + 1) + ']').addClass('active');
            //}

            $('#lastSelected').val(current.getAttribute('data-original-index') + 1);
        }

        var selectedFolderId="";
        var lineageForSpan = "";
        var selectedLineage = "";
        var parentdSelectedlineage = "";
        var currentCaption = { PopupName: "" };
        var userForecastMappingForShare;
        var ObjectIdForShare;
        var permissionsArr = [];
        var typeOfObjectShare = "";

        var folderpermissionsArr = [];
        var filepermissionArr = [];

        var selectedFolderIdForReporting = "";
        var selectedFileIdForReporting = "";
        var trRow = ""


        objectIdForDelete ="";
        lineageForDelete= "";

        var objectIdForCopy= "";
        var lineageForCopy = "";
        var folderNameForCopy="";
        var isFileCopy =false;
        
        var objectIdForPaste = "";
        var lineageForPaste = "";
        var sequenceSet = "";



        var preBDLValue = "";
        var preDealChampValue = "";
        var preBDLText = "";
        var preDealChampText = "";
        var preProjectID = "";

        var startendcount = 0;
        var itemsDisabled = {};

        var objectIdString = "";

        function ContentFilterSearch() {


            var contentKeyWord = $('#filter').val();

            var mytable = $('#drop table');

            mytable.find('tr').each(function () {
                $(this).show();
                var trow = $(this);
                //if (trow.index() === 0) {

                    if ($(this).find('td:last').attr("string"))
                    {
                        $(this).find('td:last').text("SearchedText");
                    }
                    if ($(this).find('td:last').attr("string") == "SearchedText") {
                        //$(this).find('td:last').text("-");
                        //$(this).find('th:last').text("SearchedText");
                    }     
              //  }
               // else {
                    if ($(this).find('td:last').attr("string") == "result")
                    {
                        $(this).find('td:last').text("-");
                    }
               // }
            });

            if (contentKeyWord != "") {
                var isFullTextSearch = true;   

                showOverlay("Please wait fetching result...", 'editableWorkSpace', '15', '');
                PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/ContentFilterSearch", {

                    contentKeyWord: $('#filter').val(),
                    isFullTextSearch: isFullTextSearch,
                    selectedFolder: selectedLineage
                },
                                 function (result) {
                                     if (result.success) {
                                         contentFileIds(result.FileIds);
                                         hideOverlay(true, 'editableWorkSpace');
                                     }
                                     else {
                                         hideOverlay(true, 'editableWorkSpace');
                                         PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                                     }

                                 },
                                 function (result) {
                                     hideOverlay(true, 'editableWorkSpace');
                                     PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                                 });

            }
        }

        function contentFileIds(content) {
            var tableid=$('#drop table').attr('id');
            var mytable = $('#' + tableid);

            mytable.find('tr').each(function () {
                var trow = $(this);
                
              if (trow.index() === 0)
                {
                    if ($(this).find('td:last').attr("string") == "SearchedText") {

                    }
                    else if(($(this).find('td:last').html() != "Size"))
                        {
                        trow.append('<td string="SearchedText" style="width: 65px">Searched Result</td>');
                    }
                    
                }

                else {
                    if ($(this).find('td:last').attr("string") == "result") {

                }
                else {
                    trow.append('<td string="result" >value</td>');
                }                    
                }
            });
            var tableid = $('#drop table').attr('id');
            //var mytable = $('#' + tableid);

            var table = document.getElementById(tableid);
            var isdisplay = false;          

            for (var i = 1, row; row = table.rows[i]; i++) {
              
                for (var j = 0; j < content.objectIds.length; j++) {                   

                    isdisplay = false;
                    if ($(row).attr('folderid') == content.objectIds[j]) {                      

                        $(row).find('td:last').text (content.SearchedText[j]);                       
                        isdisplay = true;
                        break;
                    }
                }
                if (isdisplay == false) {
                    $(row).css("display", "none");
                }
            }
        }

        function downloadSelectedFile() {
         
            showOverlay("Please wait while we are download file ...", 'editableWorkSpace', '15', '');

            var tableid = $('#drop table').attr('id');
           
              $('#' + tableid).find('tr').find('input:checkbox:checked').each(function () {

                  
                  var value = $(this).parent().parent().attr('folderId');
                  if (value != null) {
                      objectIdString = objectIdString + value + "|";
                      trRowid = $(this);
                  }
              });

               $('a[multipleDownload="true"]').each(function (i, el) {
                   //$(this).click();
                   var giveValue = $(this);
                  // giveValue[0].innerHTML = objectIdString;
                   giveValue[0].href = "/UserWorkSpace/downloadSelectedFile?objectIdString=" + objectIdString;                   
                   giveValue[0].click();
               });
               objectIdString = "";
               hideOverlay(true, 'editableWorkSpace');
                       
      }
       
       
        function selectedFileType(fileExtnType)
        { var array=[];
        if (fileExtnType == 0)
        {
            array.push(0,1, 2, 23,24,25,26,28,29,37);
        }
        if (fileExtnType == 1) {
            array.push(3,4,5,6,17,19,20,21,22,38,39);
        }
        if (fileExtnType == 2) {
            array.push(9,27);
        }
        if (fileExtnType == 3) {
            array.push(10,11,12,13,14,15,16);
        }
        if (fileExtnType == 4) {
            array.push(7,8,30,31,32,33,34,35,36,40);
        }
        if (fileExtnType == 5) {
            array.push(41,42,43,44,45,46);
        }
        return array;

        }
        

        function rootFolderListAdvSearch()
        {
            var listSelFolderAdvSearech = [];
            var listSelFileType = [];
            var StartDate, EndDate;
            var listLineage = [];            
            var listSelUserIds = [];          

            if ($('#Last3Days').is(':checked'))
                {
                var days = 3; // Days you want to subtract
                var date = new Date();
                var Startlast = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));
                var Startday = Startlast.getDate();
                var Startmonth = Startlast.getMonth() + 1;
                var Startyear = Startlast.getFullYear();

                var Endlast = new Date(date.getTime());
                var Endday = Endlast.getDate();
                var Endmonth = Endlast.getMonth() + 1;
                var Endyear = Endlast.getFullYear();

                var StartDate = Startmonth + "-" + Startday + "-" + Startyear;
                var EndDate = Endmonth + "-" + Endday + "-" + Endyear;

            }
            if ($('#LastMonth').is(':checked')) {

                var days = 30; // Days you want to subtract
                var date = new Date();
                var Startlast = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));
                var Startday = Startlast.getDate();
                var Startmonth = Startlast.getMonth() + 1;
                var Startyear = Startlast.getFullYear();

                var Endlast = new Date(date.getTime());
                var Endday = Endlast.getDate();
                var Endmonth = Endlast.getMonth() + 1;
                var Endyear = Endlast.getFullYear();

                var StartDate = Startmonth + "-" + Startday + "-" + Startyear;
                var EndDate = Endmonth + "-" + Endday + "-" + Endyear;

            }
            if ($('#CustomDateRange').is(':checked')) {

                var StartDate = document.getElementById("datepicker-start").value;
                var st = StartDate.split(' ');
                StartDate = st[0] + "-" + "1" + "-" + st[1];

                var EndDate = document.getElementById("datepicker-end").value;
                st = EndDate.split(' ');
                EndDate = st[0] + "-" + "1" + "-" + st[1];

            }
           
            var objectIdForAdvSearch = $("#byfolder option:selected").attr("objid");
            var lineageForAdvSearch = $("#byfolder option:selected").attr("lineageid");

            listSelFolderAdvSearech.push(objectIdForAdvSearch);

            if (lineageForAdvSearch == "0") {
                listLineage.push(objectIdForAdvSearch);
                    }
                    else {
                var li = lineageForAdvSearch + PHARMAACE.FORECASTAPP.CONSTANTS.LINEAGE_SPLITTER;
                        listLineage.push(li);
                 }
            //$("#tree0").find("input:checkbox:checked").each(function () {
            //    listSelFolderAdvSearech.push($(this).val());

            //    if ($(this).attr('chklineage') == "0") {
            //        listLineage.push($(this).val());
            //    }
            //    else {
            //        var li = $(this).attr('chklineage') + PHARMAACE.FORECASTAPP.CONSTANTS.LINEAGE_SPLITTER;
            //        listLineage.push(li);
            //    }
            //});

           
           
            $("#tree3").find("input:checkbox:checked").each(function () {
              var fileType=  selectedFileType($(this).val());

              listSelFileType.push(fileType);
            }); 
                                    
            $("#tree5").find("input:checkbox:checked").each(function () {
                listSelUserIds.push($(this).val());
            });
            var contentKeyWord = $('#filter').val();
          
            showOverlay("Please Wait Fetching The Project Content...", 'editableWorkSpace', '15', '');

            PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/AdvSearch", {
               
                SelFileTypeList: listSelFileType.join(','),
                listLineage:listLineage.join(','),
                contentKeyWord: contentKeyWord,
                StartDate: StartDate,
                EndDate: EndDate,
                listSelUserIds: listSelUserIds.join(',')
            },
                  function (result) {
                      if (result.success) {
                          addFileFolders(result.ContentFolderList);
                          hideOverlay(true, 'editableWorkSpace');
                      }
                      else
                      {
                          hideOverlay(true, 'editableWorkSpace');
                          PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');                      }
                     },
                  function (result) {
                      hideOverlay(true, 'editableWorkSpace');
                      PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                  });
        }        




        function PrevUserChangePermission() {
            var preBDLUserPerm = $('#permissarrValuesBDL option:selected').val();
            var preDealChampIdPerm=$('#permissarrValuesDealChamp option:selected').val();
            $.ajax({
                "url": "UserWorkSpace/PrevUserChangePermission",
                "data":
                    {
                        "ProjectID":preProjectID,
                        "BDLUserId": preBDLValue,
                        "DealChampId": preDealChampValue,
                        "BDLUserPerm": preBDLUserPerm,
                        "DealChampIdPerm": preDealChampIdPerm

                    },
                "success": function (result) {

                    if (result == 1) {

                        PHARMAACE.FORECASTAPP.UTILITY.popalert("Previous user permision change successfully");
                        preProjectID = 0;
                        $('#btnOkModalClose').click();

                    }
                    if (result == 0) {
                        PHARMAACE.FORECASTAPP.UTILITY.popalert("Unable to change permision");

                    }
                    preBDLText = "";
                    preDealChampText = "";
                    preBDLValue = "";
                    preDealChampValue = "";
                   
                }

            });

        }

        function renameFolder(Name) {
            var folderName = document.getElementById("txtFolderNameRename").value;



            if (!folderName) {
                PHARMAACE.FORECASTAPP.UTILITY.popalert("Enter name!");
                return false;
            }
            else {

                var folderId = document.getElementById("txtParentRename").value;

                $.ajax({
                    "url": "UserWorkSpace/renameFolder",
                    "data":
                        {
                            "oldFolderId": folderId,
                            "newName": Name,

                        },
                    "success": function (result) {

                        if (selectedTypeForRename=="Folder") {
                            if (result == 1)
                            {
                                var li = document.getElementById(folderId);
                                var aTag = li.getElementsByTagName("a");
                                var prevFolderName = aTag[0].innerHTML;
                                var r = prevFolderName.substr(0, prevFolderName.indexOf(' '));
                                var newFolderName =r + '  ' + Name;
                                aTag[0].innerHTML = newFolderName;

                                PHARMAACE.FORECASTAPP.UTILITY.popalert("Folder renamed successfully");
                            }
                            if (result == 0) {
                                PHARMAACE.FORECASTAPP.UTILITY.popalert("Unable to rename folder ");

                            }
                            if (result == 3) {
                                PHARMAACE.FORECASTAPP.UTILITY.popalert("Folder name already present");

                            }
                        }
                        else if (selectedTypeForRename == "File") {
                            if (result == 1) {

                                var tableid = $('#drop table').attr('id');
                                var tableRef = $('#' + tableid);
                                $(tableRef).find(trRow).find('#contentName').text(folderName);

                                PHARMAACE.FORECASTAPP.UTILITY.popalert("File renamed successfully");
                            }

                            if (result == 0) {
                                PHARMAACE.FORECASTAPP.UTILITY.popalert("Unable to rename ");

                            }
                            if (result == 3) {
                                PHARMAACE.FORECASTAPP.UTILITY.popalert("File name already present");

                            }
                        }

                        //if (result == 1) {

                        //    var tableid = $('#drop table').attr('id');
                        //    var tableRef = $('#' + tableid);
                        //    $(tableRef).find(trRow).find('#contentName').text(folderName);

                        //    PHARMAACE.FORECASTAPP.UTILITY.popalert("renamed successfully.");

                           
                        //}
                        
                       

                        $('#btnRenameModalClose').click();

                        document.getElementById("txtParentRename").value = "";
                        document.getElementById('txtFolderNameRename').value = "";
                    }

                });

            }
        }








        function setPopuptitle(objectId) {
            
            $('#addnewproduct h4.modal-title').html('Edit Project');
            
            //$("#dealchamp option").each(function (index ) {
            //    var fortitle = $(this).attr('data-email');
            //    //$(this).attr("title", fortitle);
            //    $('#dealbox li').eq(index).attr("title", fortitle);            
           
            //});
            //$("#bdl option").each(function (index) {
            //    var fortitle = $(this).attr('data-email');
            //    //$(this).attr("title", fortitle);
            //    $('#dealbox li').eq(index).attr("title", fortitle);

            //});

            $("#bdl option").each(function (index) {
                var fortitle = $(this).attr('data-email');
                //$(this).attr("title", fortitle);
                $('#forbdl li').eq(index).attr("title", fortitle);

            });
            $("#dealchamp option").each(function (index) {
                var fortitle = $(this).attr('data-email');
                //$(this).attr("title", fortitle);
                $('#dealbox li').eq(index).attr("title", fortitle);

            });







            document.getElementById('name').disabled = "disabled";
            
            document.getElementById('SelectedProjectId').value = objectId;

           

            PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/fetchProjectData", { ObjectId: objectId },
                    function (result) {
                        if (result.success) {
                            setDetails(result.dealDetails);
                        }
                        else

                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                    },
                    function (result) {

                        PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                    });
        }

        function setPopuptitleforAdd() {
         
            document.getElementById('name').disabled = false;
            $('#addnewproduct h4.modal-title').html('Add New Project');
            $("#bdl option").each(function (index) {
                var fortitle = $(this).attr('data-email');
                //$(this).attr("title", fortitle);
                $('#forbdl li').eq(index).attr("title", fortitle);

            });
            $("#dealchamp option").each(function (index) {
                var fortitle = $(this).attr('data-email');
                //$(this).attr("title", fortitle);
                $('#dealbox li').eq(index).attr("title", fortitle);

            });

            clearControls();


        }

        function ValidateCreateProject() {
            var valid = true;
            var name = document.getElementById('name').value;
            var deal = document.getElementById('deal').value;
            var currency = document.getElementById('currency').value;
            var performance = document.getElementById('performance').value;
            var status = document.getElementById('status').value;
            var bdl = document.getElementById('bdl').value;
            var dealchamp = document.getElementById('dealchamp').value;
            var activity = document.getElementById('activity').value;
            var priority = document.getElementById('priority').value;
           

            if (!name || !bdl || !dealchamp || !status || !activity || !priority || !deal || !performance||!currency)
            {
               
                valid = false;
            }

            return valid;

        }

        function showOverlay(loadmessage, divid, loaderSize, fromTop) {
            $('#versionmsg').css("display", "none");
            if ($("body").overlay)
                $("body").overlay(loadmessage, divid, loaderSize, fromTop);

        }
        function hideOverlay(keepEDrawHidden, divid) {
            if ($("body").overlayout)
                $("body").overlayout(divid);
            
               
        }

   function SaveProject() {
       showOverlay("Please wait while we are saving the project...", 'editableWorkSpace', '15', '');

            var isValidate = ValidateCreateProject();
            var flag = false;
           
            if (isValidate == false)
            {
                document.getElementById("btnNewProduct").removeAttribute("data-dismiss");
                hideOverlay(true, 'editableWorkSpace');                return false;
            }
            else
            {
                
                if ($('#addnewproduct h4.modal-title').html() == "Add New Project")
                {
                    $.ajax({
                        "url": "UserWorkSpace/CheckSameProjNameExist",
                        "data":
                            {
                               'ProjName' : document.getElementById('name').value
                            },
                        "success": function (result)
                        {
                            if (result==1) {
                          
                               var  projectId = document.getElementById('SelectedProjectId').value;
                                if (projectId == null || projectId == '') {
                                  var projectId = 0;
                                   
                                }

                                var name = document.getElementById('name').value;
                                var deal = document.getElementById('deal').value;
                                var currency = document.getElementById('currency').value;
                                var performance = document.getElementById('performance').value;
                                var status = document.getElementById('status').value;
                                var bdl = document.getElementById('bdl').value;
                                var dealchamp = document.getElementById('dealchamp').value;
                                var activity = document.getElementById('activity').value;
                                var priority = document.getElementById('priority').value;
                                var operationType;
                                var ProjectStatus;


                                if ($('#addnewproduct h4.modal-title').html() == "Add New Project") {
                                    operationType = 1;
                                    ProjectStatus = "Project added successfully! ";
                                }
                                 $.ajax({
                                    "url": "UserWorkSpace/SaveProject",
                                    "data":
                                        {
                                            'name': name,
                                            'deal': deal,
                                            'currency': currency,
                                            'performance': performance,
                                            'status': status,
                                            'bdl': bdl,
                                            'dealchamp': dealchamp,
                                            'activity': activity,
                                            'priority': priority,
                                            'operationType': operationType,
                                            'projectId': projectId

                                        },
                                    "success": function (result) {
                                        if (result == 1) {
                                            hideOverlay(true, 'editableWorkSpace');
                                            PHARMAACE.FORECASTAPP.UTILITY.popalert(ProjectStatus);
                                            $.ajax({
                                                "url": "UserWorkSpace/LeftPaneFolderRoot",
                                                "data":
                                                   {


                                                   },
                                                "success": function (result) {
                                                    $('#tree2').html(result);
                                                }
                                            });
                                        }
                                    }
                                });

                          

                            }

                            if (result == 0) {
                                hideOverlay(true, 'editableWorkSpace');
                                PHARMAACE.FORECASTAPP.UTILITY.popalert("Project name entered already exist");

                            }
                            else {

                                hideOverlay(true, 'editableWorkSpace');
                            }
                        }

                    });
                }
              
                if($('#addnewproduct h4.modal-title').html() == "Edit Project" )
                {

                            var projectId = document.getElementById('SelectedProjectId').value;
                            var name = document.getElementById('name').value;
                            var deal = document.getElementById('deal').value;
                            var currency = document.getElementById('currency').value;
                            var performance = document.getElementById('performance').value;
                            var status = document.getElementById('status').value;
                            var bdl = document.getElementById('bdl').value;
                            var dealchamp = document.getElementById('dealchamp').value;
                            var activity = document.getElementById('activity').value;
                            var priority = document.getElementById('priority').value;
                            var operationType;
                            var ProjectStatus;


                          if ($('#addnewproduct h4.modal-title').html() == "Edit Project") {
                                operationType = 0;
                                ProjectStatus = "Project modified successfully! ";
                                var countForChange = 0;
                                if (preBDLValue != bdl && preDealChampValue != dealchamp && preBDLValue == preDealChampValue) {
                                    countForChange = 1;//indicates BD& L lead 
                                    editPermissionPopup(countForChange, projectId);
                                }
                                if (preBDLValue != bdl && preDealChampValue == dealchamp) {
                                    countForChange = 1;//indicates BD& L lead 
                                    editPermissionPopup(countForChange, projectId);
                                }
                                if (preDealChampValue != dealchamp && preBDLValue == bdl) {
                                    countForChange = 2;//indicates Deal Champion            
                                    editPermissionPopup(countForChange, projectId);
                                }
                                if (preBDLValue != bdl && preDealChampValue != dealchamp && preBDLValue != preDealChampValue) {
                                    countForChange = 3;//indicates BD& L lead and Deal Champion 
                                    editPermissionPopup(countForChange, projectId);
                                }
                            }

                                $.ajax({
                                "url": "UserWorkSpace/SaveProject",
                                "data":
                                    {
                                        'name': name,
                                        'deal': deal,
                                        'currency': currency,
                                        'performance': performance,
                                        'status': status,
                                        'bdl': bdl,
                                        'dealchamp': dealchamp,
                                        'activity': activity,
                                        'priority': priority,
                                        'operationType': operationType,
                                        'projectId': projectId

                                    },
                                "success": function (result) {
                                    if (result == 1) {
                                        hideOverlay(true, 'editableWorkSpace');
                                              PHARMAACE.FORECASTAPP.UTILITY.popalert(ProjectStatus);
                                                 $.ajax({
                                                       "url": "UserWorkSpace/LeftPaneFolderRoot",
                                                       "data":
                                                          {
                                                  

                                                          },
                                                       "success": function (result) {
                                                              $('#tree2').html(result);
                                                       }
                                                     });
                                                 }
                                }
                                });

                        }
                       

               
        }
    }

       


        function editPermissionPopup(countForChange, projectId) {
            preProjectID = projectId;
            if (countForChange == 1)
            {
                $('#BdlId').val(preBDLText);
                $('#champChangePermValues').css("display", "none");
                $('#bdlchangePermValues').css("display", "block");
                
                for (i = 0; i < permissionsArr.length;i++)
                {
                    
                    if ((permissionsArr[i].Name) == "Creator") {
                        $('#permissarrValuesBDL').append('<option value="' + permissionsArr[i].Id + '" selected>' + (permissionsArr[i].Name) + '</option>');

                    }
                    else {
                        $('#permissarrValuesBDL').append('<option value="' + permissionsArr[i].Id + '">' + (permissionsArr[i].Name) + '</option>');

                    }
                }
                $('#btnchangePerm').click();
            }
            if (countForChange == 2) {
                $('#ChampId').val(preDealChampText);
                $('#bdlchangePermValues').css("display", "none");
                $('#champChangePermValues').css("display", "block");
                for (i = 0; i < permissionsArr.length; i++) {
                    if ((permissionsArr[i].Name)=="Creator") {
                        $('#permissarrValuesDealChamp').append('<option value="' + permissionsArr[i].Id + '" selected>' + (permissionsArr[i].Name) + '</option>');

                    }
                    else {
                        $('#permissarrValuesDealChamp').append('<option value="' + permissionsArr[i].Id + '">' + (permissionsArr[i].Name) + '</option>');

                    }
                   }
                $('#btnchangePerm').click();
            }
            if (countForChange == 3) {
                $('#BdlId').val(preBDLText);
                $('#ChampId').val(preDealChampText);
                $('#bdlchangePermValues').css("display", "block");
                $('#champChangePermValues').css("display", "block");
                for (i = 0; i < permissionsArr.length; i++) {
                    if ((permissionsArr[i].Name) == "Creator") {
                        $('#permissarrValuesBDL').append('<option value="' + permissionsArr[i].Id + '" selected>' + (permissionsArr[i].Name) + '</option>');

                    }
                    else {
                        $('#permissarrValuesBDL').append('<option value="' + permissionsArr[i].Id + '">' + (permissionsArr[i].Name) + '</option>');

                    }
                }
                for (i = 0; i < permissionsArr.length; i++) {
                    if ((permissionsArr[i].Name) == "Creator") {
                        $('#permissarrValuesDealChamp').append('<option value="' + permissionsArr[i].Id + '" selected>' + (permissionsArr[i].Name) + '</option>');

                    }
                    else {
                        $('#permissarrValuesDealChamp').append('<option value="' + permissionsArr[i].Id + '">' + (permissionsArr[i].Name) + '</option>');

                    }
                }
                $('#btnchangePerm').click();
            }
                   
        }

        function clearControls() {

            $('#name').val('');
            $('#performance').val('');
            $('#deal').val('');
            $("#status").val('');
            $("#bdl").val('');
            $("#dealchamp").val('');
            $("#activity").val('');
            $("#priority").val('');
            $("#currency").val('');



            var bdluser = document.getElementsByName("bdl");
            var parentEl = bdluser[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");
            var spanElement = secButtonParent[0].getElementsByTagName("span");
            spanElement[0].innerText = "Please Select";
            /////////////////////////////////////////////////////////
            var actuser = document.getElementsByName("activity");
            var parentEl = actuser[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");
            var spanElement = secButtonParent[0].getElementsByTagName("span");
            spanElement[0].innerText = "Please Select";

            ////////////////////////////////////////////////////////            
            var dchamp = document.getElementsByName("dealchamp");
            var parentEl = dchamp[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");
            var spanElement = secButtonParent[0].getElementsByTagName("span");
            spanElement[0].innerText = "Please Select";
            ///////////////////////////////////////////////
            var statusele = document.getElementsByName("status");
            var parentEl = statusele[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");
            var spanElement = secButtonParent[0].getElementsByTagName("span");
            spanElement[0].innerText = "Please Select";
            ///////////////////////////
            var priorityele = document.getElementsByName("priority");
            var parentEl = priorityele[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");
            var spanElement = secButtonParent[0].getElementsByTagName("span");
            spanElement[0].innerText = "Please Select";
            ////////////////////////////////////////////////////////
            var currencyval = document.getElementsByName("currency");
            var parentEl = currencyval[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");
            var spanElement = secButtonParent[0].getElementsByTagName("span");
            spanElement[0].innerText = "Please Select";

        }
        function IncCountAfterPaste(isFileCopy, lineageForPaste, objectIdForPaste, objectIdForCopy) {
            
             if (isFileCopy == true) {
                if (lineageForPaste.toString().trim() == "0") {
                    var ids = selectedFolderId;
                    var span = document.getElementById("SpnFCount" + ids);
                    var prevCount = span.innerHTML;
                     span.innerHTML = parseInt(parseInt(prevCount) + 1);
                 }
                else {
                    var lineageAfterAppendObjId = lineageForPaste + PHARMAACE.FORECASTAPP.CONSTANTS.LINEAGE_SPLITTER + objectIdForPaste;
                    var ids = lineageAfterAppendObjId.toString().split(PHARMAACE.FORECASTAPP.CONSTANTS.LINEAGE_SPLITTER);
                    for (var i = 0; i < ids.length; i++) {
                        var span = document.getElementById("SpnFCount" + ids[i]);
                        var prevCount = span.innerHTML;
                        span.innerHTML = parseInt(parseInt(prevCount) + 1);
                        }
                       
                    }
             }
             else
             {
                 var copySpan = document.getElementById("SpnFCount" + objectIdForCopy);
                 var fileCountInFolder = copySpan.innerHTML;
                 if (lineageForPaste.toString().trim() == "0") {
                     var ids = selectedFolderId;
                     var span = document.getElementById("SpnFCount" + ids);
                     var prevCount = span.innerHTML;
                     span.innerHTML = parseInt(parseInt(prevCount) + parseInt(fileCountInFolder));
                 }
                 else {
                     var lineageAfterAppendObjId = lineageForPaste + PHARMAACE.FORECASTAPP.CONSTANTS.LINEAGE_SPLITTER + objectIdForPaste;
                     var ids = lineageAfterAppendObjId.toString().split(PHARMAACE.FORECASTAPP.CONSTANTS.LINEAGE_SPLITTER);
                     for (var i = 0; i < ids.length; i++) {
                         var span = document.getElementById("SpnFCount" + ids[i]);
                         var prevCount = span.innerHTML;
                         span.innerHTML = parseInt(parseInt(prevCount) + parseInt(fileCountInFolder));
                     }

                 }


             }


            
        }

        function setDetails(dealDetails) {
          
            $('#name').val(dealDetails.Name);
            $('#performance').val(dealDetails.Objective);
            $('#deal').val(dealDetails.Value);
            $("#status").val(dealDetails.StageID);
            $("#bdl").val(dealDetails.BDL_Lead);
            $("#dealchamp").val(dealDetails.DealChampion);
            $("#activity").val(dealDetails.ActivityID);
            $("#priority").val(dealDetails.Priority);
            $("#currency").val(dealDetails.Currency);
           
            var bdluser = document.getElementsByName("bdl");
            var bdlSelIndex = $("#bdl")[0].selectedIndex;

            var parentEl = bdluser[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");
            var spanElement = secButtonParent[0].getElementsByTagName("span");
            spanElement[0].innerText = bdluser[0].options[bdlSelIndex].text;
            /////////////////////////////////////////////////////////
            var actSelIndex = $("#activity")[0].selectedIndex;
            var actuser = document.getElementsByName("activity");
            var parentEl = actuser[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");

            var spanElement = secButtonParent[0].getElementsByTagName("span");
            spanElement[0].innerText = actuser[0].options[actSelIndex].text;

            ////////////////////////////////////////////////////////
            var dchampSelIndex = $("#dealchamp")[0].selectedIndex;
            var dchamp = document.getElementsByName("dealchamp");
            var parentEl = dchamp[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");

            var spanElement = secButtonParent[0].getElementsByTagName("span");
            spanElement[0].innerText = dchamp[0].options[dchampSelIndex].text;
            ///////////////////////////////////////////////
            var statusSelIndex = $("#status")[0].selectedIndex;
            var statusele = document.getElementsByName("status");
            var parentEl = statusele[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");

            var spanElement = secButtonParent[0].getElementsByTagName("span");
            spanElement[0].innerText = statusele[0].options[statusSelIndex].text;
            ///////////////////////////
            var priSelIndex = $("#priority")[0].selectedIndex;
            var priorityele = document.getElementsByName("priority");
            var parentEl = priorityele[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");

            var spanElement = secButtonParent[0].getElementsByTagName("span");
          //  spanElement[0].innerText = priorityele[0].options[priSelIndex].text;
            spanElement[0].innerText =1;
            ////////////////////////////////////////////////////////
            var curSelIndex = $("#currency")[0].selectedIndex;
            var currencyval = document.getElementsByName("currency");
            var parentEl = currencyval[0].parentElement;
            var secParent = parentEl.getElementsByTagName("div");
            var secButtonParent = parentEl.getElementsByTagName("button");

            var spanElement = secButtonParent[0].getElementsByTagName("span");
            spanElement[0].innerText = currencyval[0].options[curSelIndex].text;

            preBDLText = $('#bdl option:selected').text();
            preDealChampText = $('#dealchamp option:selected').text();
            preBDLValue = dealDetails.BDL_Lead;
            preDealChampValue=dealDetails.DealChampion;
        }

        function stageWiseProjList(stageName) {
            showOverlay("Please wait while we are getting Project data ...", 'editableWorkSpace', '15', '');
            PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/GetStageWiseProjList", { stageName: stageName },
                              function (result) {
                                  if (result.success) {
                                      hideOverlay(true, 'editableWorkSpace');
                                      actProjectList(result.actProjList);
                                  }
                                  else
                                  {
                                      hideOverlay(true, 'editableWorkSpace');
                                      PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');

                                  }
                              },
                              function (result) {
                                  hideOverlay(true, 'editableWorkSpace');
                                  PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                              });

        }

       
        function ActivitiesProjList(activityId) {       
            showOverlay("Please wait while we are getting Project data ...", 'editableWorkSpace', '15', '');

            PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/GetActivityWiseProjList", { activityId: activityId },
                   function (result) {
                       if (result.success) {
                           hideOverlay(true, 'editableWorkSpace');
                           actProjectList(result.actProjList);
                       }
                       else {
                           hideOverlay(true, 'editableWorkSpace');
                           PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                       }
                   },
                   function (result) {
                       hideOverlay(true, 'editableWorkSpace');
                       PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                   });

        }

        function actProjectList(actProjList)
        {
            var tableRef = document.getElementById('trackerWorkspaceTable').getElementsByTagName('tbody')[0];
            var str = '';           
            actProjList.forEach(function (actProjList) {                         
                str += '<tr>';
                str += '<td>' + actProjList.StageName+ '</td>';
                str += '<td>'+ actProjList.ActivityName + '</td>';                
                str += '<td>' + actProjList.Name + '</a></td>';               
                str += '<td> ' + actProjList.DealChampUserName  + '</td>';              
                str += '<td> ' + actProjList.BDLUserName + '</td>';
                str += '<td>' + actProjList.Objective + '</td>';
              
                str += '</tr>';
               
            })
            tableRef.innerHTML = "";
            tableRef.innerHTML = str;                      
        }       
       
       


        function addScripts() {
         
            PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/getActivityData", {},
                               function (result) {

                                   if (result.success)
                                   {

                                       var activities = result.activityListData;

               // var data = [
               //{ label: "M&A", data: 1800 },
               //{ label: "Product Acquisition/ Divestiture", data: 1200 },
               //{ label: "Product Licensing", data: 800 },
                                       //{ label: "Authorised Generics", data: 500 } ];

                                       var data = [];
                                       for (var j = 0 ; j < activities.length ; j++)
                                       {
                                           var act = { label: "", data: "" , actId:"" }
                                           act.label = activities[j].Name;
                                           act.data = activities[j].projCounts;
                                           act.actId = activities[j].ID;
                                           data.push(act);
                                       }
                                     

                                       $.plot('#placeholder', data, {
                                           series: {
                                               
                                               pie: {
                                                   show: true,
                                                   offset: {
                                                       top: -20
        
                                                   },
                                                   //series.color
                                                   //label
                                                   label: {
                                                       show: true,
                                                       formatter: function (label, series) {
                                                           var element = '<div style="font-size:9pt;text-align:center;padding:2px;"><a actId="' + series.actId + '" title="' + label + '" style="color:#fff; padding:20px;" onclick=ActivitiesProjList(' + series.actId + ')>' + series.data[0][1] + '</a></div>';
                                                           return element; 
                                                       },
                                                       radius: 2 / 4,
                                                   }
                                               }
                                           },
                                           grid: {
                                               hoverable: true,
                                               clickable: true
                                           }
                                       });
                                      
                                   }
                                   else
                                       PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                               },
                               function (result) {
                                   PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                               });

            $('#leftmenu').css("display", "none");
            $('#editableWorkSpace').removeClass("col-md-9").css("padding", "0px 15px");
            document.getElementById("advFilter").style.display = "none";
            
           
        }

        function GetLibraryTab() {
            var tableid = $('#drop table').attr('id');
            $('#' + tableid).find('tr').each(function () {
                var attr = $(this).attr('folderid');
                if (typeof attr !== typeof undefined && attr !== false) {
                    $(this).remove();
                }
            });
            $('#showhide').show();
            $('#custom-search-input').show();
            $('#searchButton').css("display", "none");
            $('#leftmenu').css("display", "block");
            $('#treeforfolderlist').css("display", "block");
            $('#treeforAdvSearch').html('');
            $('.leftBox').css("display", "none");
            $('#tabAttr').removeAttr('style');
            $('#showhide').show();
            $('#addnewproject').css("display", "block");
            $('#searchFromList').css("display", "block");
            $('#treeforReporting').css("display", "none");
            //$('#leftmenu').css("display", "block");
            //$('#tree2').css("display", "block");
            document.getElementById("leftmenu").className = "col-md-3";
            document.getElementById("editableWorkSpace").className = "col-md-9";
            document.getElementById("sliderArrow").style.display = "block";
            document.getElementById("advFilter").style.display = "block";
            //document.getElementById("workspaceView").style.display = "block";
        }
        function GetReportsTab() {
           
            document.getElementById("leftmenu").className = "col-md-3";
            document.getElementById("editableWorkSpace").className = "col-md-9";
            document.getElementById("sliderArrow").style.display = "block";
            document.getElementById("advFilter").style.display = "block";
            //document.getElementById("workspaceView").style.display = "block";
            //document.getElementById("workspaceView").style.visibility = "visible";
        }               
        function GetTrackerSummaryTab() {
            $('#tabAttr').css('display',"none");

            $.ajax({
                "url": "UserWorkSpace/ProjectSummary",
                "data":
                    {},
              
                "success": function (result) {

                    $('#leftmenu').css("display", "none");
                    $('#showhide').css("display", "none");
                    $('#editableWorkSpace').removeClass("col-md-9").css("padding","0px 15px");
                    document.getElementById("advFilter").style.display = "none";
                    addScripts();
                }

            });

        }
        
        function populateSharePopup() {

            PHARMAACE.FORECASTAPP.SERVICE.getHtmlData("/UserWorkSpace/SharePopup",
                { ObjectId: document.getElementById("txtParent").value },
                 function (data) {
                     PHARMAACE.FORECASTAPP.SHARE.autocompleteForUsers();
                     var element = document.getElementById('ShareResult');
                     element.innerHTML = data;
                   //  $('#inputPassword').autocomplete({ source: PHARMAACE.FORECASTAPP.SHARE.autocompleteListData });
                     $('#shareModal').modal('show');
                 },
                        function (status) {
                            PHARMAACE.FORECASTAPP.UTILITY.popalert(status);
                        });
        }



        function FillSharePopUp(userForShare) {
            var str = '';
            //var str1 = "";
            var str1 = $('#prdverid tbody');
            var tableRef = document.getElementById('prdverid').getElementsByTagName('tbody')[0];
           
                //tableRef.innerHTML = "";
                //str1 += '<tr><td colspan="5" style="padding-left:0px; padding-right:0px; padding-bottom:0px;">';
                //str1 += '<input type="text" class="form-control ui-widget" id="inputPassword"  style="width:100%;">';
                //str1 += '</td></tr>';
                var populatedSelectBox;
                userForShare.forEach(function (userForShare) {

                    str += '<tr class="ShareUsers innerTrShareForcast" data-index="0" unShareId=' + userForShare.UserId + ' class="ShareUsers">';
                    str += '<td class="bs-checkbox"> '+ userForShare.FullName +' </td>';
                    str += '<td id="shareuseremail" style = ""> ' + userForShare.EmailId + '</td>';
                    str += ' <td style="display:none;" class="divOne">' + userForShare.UserId + '</td>';
                    str += '<td><select type="text" id ="getpermission" class="form-control multiselect multiselect-icon" >';
                    PHARMAACE.FORECASTAPP.SHARE.checkShareType(shareType);

                    if (typeOfObjectShare == "Folder") {
                      
                        populatedSelectBox = PHARMAACE.FORECASTAPP.SHARE.ShowSharePermission(userForShare.Permission, folderpermissionsArr);
                    }
                    else if (typeOfObjectShare == "File")
                    {
                        populatedSelectBox = PHARMAACE.FORECASTAPP.SHARE.ShowSharePermission(userForShare.Permission, filepermissionArr);
                    }

                    str += populatedSelectBox;
                    str += '</select>';
                    str += '</td>';
                    str += '<td class="unshareicon"><i class="fa fa-times" aria-hidden="true" style="cursor:pointer;" onclick="UnshareItem(' + userForShare.UserId + ');"></i></td>';
                    str += '</tr>';

                    })
            
            // tableRef.innerHTML = str + str1;
                str1.append(str);
            //$('#inputPassword').autocomplete({ source: PHARMAACE.FORECASTAPP.SHARE.autocompleteListData });

        }

        function populateSharePopupWithFetchedData(userForShare) {

            PHARMAACE.FORECASTAPP.SERVICE.getHtmlData("/UserWorkSpace/SharePopup",
                { ObjectId: document.getElementById("txtParent").value },
                 function (data) {
                     PHARMAACE.FORECASTAPP.SHARE.autocompleteForUsers();
                    var element = document.getElementById('ShareResult');
                     element.innerHTML = data;
                     FillSharePopUp(userForShare);
                     //dynamicInputTextboxShare();
                    // $('#inputPassword').autocomplete({ source: PHARMAACE.FORECASTAPP.SHARE.autocompleteListData });
                     $('#shareModal').modal('show');
                 },
                        function (status) {
                            PHARMAACE.FORECASTAPP.UTILITY.popalert(status);
                        });
        }
        function unshareForecast(userId)
        {
            alert('yes');
        }




        function createFolder(Name) {
            var folderName = document.getElementById("txtFolderName").value;
            
            if (!folderName) {
                PHARMAACE.FORECASTAPP.UTILITY.popalert("Enter folder name");
                return false;
            }
            else {

                var parentId = document.getElementById("txtParent").value;
                showOverlay("Please wait while we are creating folder...", 'editableWorkSpace', '15', '');
                $.ajax({
                    "url": "UserWorkSpace/CreateFolder",
                    "data":
                        {
                            "parentId": parentId,
                            "ChildName": Name,

                        },
                    "success": function (result) {

                        if (result == 1) {
                            hideOverlay(true, 'editableWorkSpace');
                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Folder created successfully");
                            var objectId = parentId;
                            var lineage = document.getElementById(parentId).getAttribute("lineagestring");
                            var sequence = document.getElementById(parentId).getAttribute("sequence");                           
                            callLeftPaneFolderViewWithIndexForCreatedFolder(objectId, lineage, sequence);
                        }
                        if (result == 0) {
                            hideOverlay(true, 'editableWorkSpace');
                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Folder name already exists ");

                        }
                        if (result == 2) {
                            hideOverlay(true, 'editableWorkSpace');
                        }
                        $('#btnModalClose').click();

                        document.getElementById("txtParent").value = "";
                        document.getElementById('txtFolderName').value = "";
                    }

                });

            }
        }

        function callLeftPaneFolderViewWithIndexForCreatedFolder(objectId, lineage, parentIndex) {
             var SpanId = "Span" + objectId;
            var fisrSpanId = "SpanFirst" + objectId;
            var spanEl = document.getElementById(SpanId);
            var SpanFirst = document.getElementById(fisrSpanId);
            var selectedLi = document.getElementById(objectId);
            sequenceSet = $(selectedLi).attr('sequence');
            var SpanClassName = spanEl.className;

            if (SpanClassName == "fa fa-chevron-up") {
                var x;
                var li = document.getElementById(objectId);
                var ul = li.getElementsByTagName(
                    "ul")
                for (i = 0; i < ul.length; i++) {
                    x = ul[i];
                    // x.style.display = "none";
                  //  x.remove();
                    x.parentNode.removeChild(x)
                }
                spanEl.className = "fa fa-chevron-down";
                SpanFirst.className = "glyphicon glyphicon glyphicon-folder-close";
            }
                $.ajax({
                    "url": "UserWorkSpace/LeftPaneFolderViewWithIndex",
                    "data":
                        {
                            'ObjectId': objectId,
                            'lineage': lineage,
                            'parentIndex': sequenceSet
                        },
                    "success": function (result) {
                        $("#" + objectId).append(result);
                    }
                });
                spanEl.className = "fa fa-chevron-up";
                SpanFirst.className = "glyphicon glyphicon glyphicon-folder-open";
            }

        $(function () {
           
            var tableid = $('#drop table').attr('id');
           
            itemsDisabled["uploadfile"] = true;
            itemsDisabled["new"] = true;
            itemsDisabled["paste"] = true;

            $.contextMenu({

                selector: '#tree2 li',


                build: function ($trigger, e) {
                    // this callback is executed every time the menu is to be shown
                    // its results are destroyed every time the menu is hidden
                    // e is the original contextmenu event, containing e.pageX and e.pageY (amongst other data)
                    // $trigger is the element that was rightclicked on - get its id here
                    var permission = $trigger.attr('permission');
                    var lineageString = $trigger.attr('lineageString');
                   
                    if (lineageString == "0") {

                        if (permission == "FullControl" && isFileCopy== false) {
                            menuItems = {
                                "new": { name: "Create Folder", icon: "fa-folder-o" },
                                //"uploadfile": { name: "Upload File", icon: "fa-upload" },
                                //"rename": { name: "Rename", icon: "fa-pencil-square-o" },
                                "deleteli": { name: "Delete", icon: "fa-trash-o" },
                                "share": { name: "Share", icon: "fa-share-square-o" },                                
                                "paste": {
                                    name: "Paste", icon: "fa-clipboard", disabled:
                                    function (key, opt) {
                                        return !!itemsDisabled[key];
                                    }

                                }
                            }
                        }
                      else if (permission == "FullControl" && isFileCopy == false) {
                            menuItems = {
                                "new": { name: "Create Folder", icon: "fa-folder-o" },
                                //"uploadfile": { name: "Upload File", icon: "fa-upload" },
                                //"rename": { name: "Rename", icon: "fa-pencil-square-o" },
                                "deleteli": { name: "Delete", icon: "fa-trash-o" },
                                "share": { name: "Share", icon: "fa-share-square-o" }
                                //"paste": {
                                //    name: "Paste", icon: "fa-clipboard", disabled:
                                //    function (key, opt) {
                                //        return !!itemsDisabled[key];
                                //    }

                               // }
                            }
                        }
                    else if (permission == "Limited"  && isFileCopy == true) {
                            menuItems = {
                                "new": { name: "Create Folder", icon: "fa-folder-o" },
                               // "uploadfile": { name: "Upload File", icon: "fa-upload" },
                                //"rename": { name: "Rename", icon: "fa-pencil-square-o" },
                                "deleteli": { name: "Delete", icon: "fa-trash-o" },
                                "share": { name: "Share", icon: "fa-share-square-o" } 
                               // "paste": {
                                //     name: "Paste", icon: "fa-clipboard", disabled:
                               //function (key, opt) {
                               //    return !!itemsDisabled[key];
                               //}
                               // }
                            }
                    }
                    else if (permission == "Limited"  && isFileCopy == false) {
                        menuItems = {
                            "new": { name: "Create Folder", icon: "fa-folder-o" },
                            // "uploadfile": { name: "Upload File", icon: "fa-upload" },
                            //"rename": { name: "Rename", icon: "fa-pencil-square-o" },
                            "deleteli": { name: "Delete", icon: "fa-trash-o" },
                            "share": { name: "Share", icon: "fa-share-square-o" }, 
                            "paste": {
                                name: "Paste", icon: "fa-clipboard", disabled:
                           function (key, opt) {
                               return !!itemsDisabled[key];
                           }
                            }
                        }
                    }


                    else if (permission == "Write" && isFileCopy == true) {
                            menuItems = {
                                "new": { name: "Create Folder", icon: "fa-folder-o" }
                                //"uploadfile": { name: "Upload File", icon: "fa-upload" },
                                //"rename": { name: "Rename", icon: "fa-pencil-square-o" },
                                //"delete": { name: "Delete", icon: "fa-trash-o" },
                                //"share": { name: "Share", icon: "fa-share-square-o" },
                                
                               // "paste": {
                                //     name: "Paste", icon: "fa-clipboard", disabled:
                               //function (key, opt) {
                               //    return !!itemsDisabled[key];
                               //}
                               // }
                            }
                    }
                        
                    else if (permission == "Write" && isFileCopy == false) {
                        menuItems = {
                            "new": { name: "Create Folder", icon: "fa-folder-o" },
                            //"uploadfile": { name: "Upload File", icon: "fa-upload" },
                            //"rename": { name: "Rename", icon: "fa-pencil-square-o" },
                            //"delete": { name: "Delete", icon: "fa-trash-o" },
                            //"share": { name: "Share", icon: "fa-share-square-o" },
                                
                             "paste": {
                                 name: "paste", icon: "fa-clipboard", disabled:
                            function (key, opt) {
                                return !!itemsdisabled[key];
                            }
                             }
                        }
                    }
                        else if (permission == "Read" ) {
                            menuItems = {

                                "uploadfile": { name: "Upload File", icon: "fa-upload" },
                                "View": { name: "View", icon: "fa-share-square-o" }
                            }
                        }

                        else if (permission == "NoAccess") {
                            menuItems = {

                            }
                        }
                    }
                    else { //if clicked on subfolders
                        if (permission == "FullControl") {
                            menuItems = {
                                "new": { name: "Create Folder", icon: "fa-folder-o" },
                                "uploadfile": { name: "Upload File", icon: "fa-upload" },
                                "rename": { name: "Rename", icon: "fa-pencil-square-o" },
                                "deleteli": { name: "Delete", icon: "fa-trash-o" },
                                "share": { name: "Share", icon: "fa-share-square-o" },
                                "copy": { name: "Copy", icon: "fa-files-o" },
                                "paste": {
                                    name: "Paste", icon: "fa-clipboard", disabled:
                                    function (key, opt) {
                                        return !!itemsDisabled[key];
                                    }

                                }



                            }
                        }
                        else if (permission == "Limited") {
                            menuItems = {
                                "new": { name: "Create Folder", icon: "fa-folder-o" },
                                "uploadfile": { name: "Upload File", icon: "fa-upload" },
                                "rename": { name: "Rename", icon: "fa-pencil-square-o" },
                                "deleteli": { name: "Delete", icon: "fa-trash-o" },
                                "share": { name: "Share", icon: "fa-share-square-o" },
                                "copy": { name: "Copy", icon: "fa-files-o" },
                                "paste": {
                                    name: "Paste", icon: "fa-clipboard", disabled:
                               function (key, opt) {
                                   return !!itemsDisabled[key];
                               }
                                }
                            }
                        }

                        else if (permission == "Write") {
                            menuItems = {
                                "new": { name: "Create Folder", icon: "fa-folder-o" },
                                "uploadfile": { name: "Upload File", icon: "fa-upload" },
                                "rename": { name: "Rename", icon: "fa-pencil-square-o" },
                                //"delete": { name: "Delete", icon: "fa-trash-o" },
                                //"share": { name: "Share", icon: "fa-share-square-o" },
                                "copy": { name: "Copy", icon: "fa-files-o" },
                                "paste": {
                                    name: "Paste", icon: "fa-clipboard", disabled:
                               function (key, opt) {
                                   return !!itemsDisabled[key];
                               }
                                }
                            }
                        }
                        else if (permission == "Read") {
                            menuItems = {

                                "uploadfile": { name: "Upload File", icon: "fa-upload" },
                                "View": { name: "View", icon: "fa-share-square-o" }
                            }
                        }

                        else if (permission == "NoAccess") {
                            menuItems = {

                            }
                        }

                    }

                    // build the menu items
                   

                    return {
                            callback: function (key, options) {

                                var x, ParentId;

                                var ListItem = $("li[class*='context-menu-active']");
                                var pid = $(ListItem).attr('id');
                                var permission = $(ListItem).attr('permission');
                                selectedFolderIdForReporting = pid;
                                var li = document.getElementById(pid);
                                var Name = li.getElementsByTagName("a");
                                var PrevName = Name[0].innerHTML;


                                selectedLineage = $(ListItem).attr('lineageString');
                                lineageForSpan = $(ListItem).attr('lineageString');

                                var selectedLineageForDelete = selectedLineage;
                                selectedFolderId = pid;


                                if (typeof pid != 'undefined') {
                                    document.getElementById("txtParent").value = pid;
                                }

                                if (typeof selectedFolderIdForReporting != 'undefined') {
                                    document.getElementById("txtParentRename").value = selectedFolderIdForReporting;
                                }

                                if (typeof ParentId != 'undefined') {
                                    document.getElementById("txtParent").value = ParentId;
                                }

                                //  alert(x);

                                if (x == "File") {
                                    alert("The directry or file can not be created under file..!!");
                                }
                                else {

                                    if (key == "share") {
                                        typeOfObjectShare = "Folder";
                                        ObjectIdForShare = pid;
                                       
                                        PHARMAACE.FORECASTAPP.SERVICE.getJsonData("/UserWorkSpace/FecthAlreadyShared", { ObjectId: ObjectIdForShare },
                        function (result) {
                            if (result.success) {
                                if (result.userForShare.length == 0)
                                {
                                    $("#btnShowShare").click();
                                    populateSharePopup();                                    
                                     $('#prdverid tr').remove();

                                }
                                else if (result.userForShare.length > 0) {

                                    $("#btnShowShare").click();
                                    populateSharePopupWithFetchedData(result.userForShare);

                                }
                            }

                            else
                                PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed: " + result.errors.join(), '');
                        },
                        function (result) {
                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Fetching contents failed! " + result.responseText, '');
                        });


                                       
                                           // PHARMAACE.FORECASTAPP.UTILITY.loadScript("../../Scripts/lib/jquery/jquery-ui.js", function () {
                                                //$('#VersionList').selectpicker('deselectAll');
                                                //$('#shareAllProject').checked = false;
                                               // $('#prdverid tr').remove();
        

                                        //});
                                        
                                          
                                    }

                                    if (key == "new") {
                                        $('#btnmodl').click();
                                   
                                        var s = document.getElementById('txtFolderName').value
                                    }
                                    if (key == "uploadfile") {

                                        $('#btnupload').click();

                                        // var s = document.getElementById('txtFolderName').value
                                    }
                                    if (key == "rename") {
                                        
                                        selectedTypeForRename = "Folder";
                                        document.getElementById('txtFolderNameRename').placeholder = PrevName.substr(PrevName.indexOf(' ') + 1);

                                        //var pName = PrevName.split(' ');
                                        //pName.splice(0, 1);
                                       
                                        $('#btnrename').click();
                                        document.getElementById('renameModalLabel').innerHTML = "Rename Folder";
                                    }
                                      
                                    if (key == "deleteli")
                                    {
                                        var isProceedDelete = "";
                                        var delmsg = "";
                                        var selectedLiForDelete = document.getElementById(pid);
                                        var aForDelete = selectedLiForDelete.getElementsByTagName('a');
                                        var tempFolderName = aForDelete[0].innerHTML;
                                        var folderNameForDelete = tempFolderName.substr(tempFolderName.indexOf(' ') + 1);
                                        if (selectedLineageForDelete == "0") {
                                            delmsg = "project";

                                        }
                                        else {
                                            delmsg = "folder";
                                        }
                                        bootbox.confirm({
                                            size: 'small',
                                            message: 'Are you sure you want to delete' + ' ' + delmsg + ' ' + folderNameForDelete+'?',
                                            buttons: {
                                                'confirm': {
                                                    label: 'Yes',
                                                    className: 'btn-danger pull-right'
                                                },
                                                'cancel': {
                                                    label: 'No',
                                                    className: 'btn-default pull-left'
                                                }
                                            },

                                            callback: function (result) {
                                                if (result) {

                                                    objectIdForDelete = pid;
                                                    lineageForDelete = selectedLineageForDelete;
                                                    
                                                   
                                                
                                                    showOverlay("Please wait while we are deleting folder ...", 'editableWorkSpace', '15', '');

                                                    $.ajax({
                                                        "url": "UserWorkSpace/delete",
                                                        "data":
                                                            {
                                                                'objectIdForDelete': objectIdForDelete,
                                                                'lineageForDelete': lineageForDelete


                                                            },
                                                        "success": function (result) {
                                                            if (result == 0) {
                                                                hideOverlay(true, 'editableWorkSpace');
                                                                PHARMAACE.FORECASTAPP.UTILITY.popalert(folderNameForDelete+' '+delmsg + " deleted successfully");
                                                                $.ajax({
                                                                    "url": "UserWorkSpace/LeftPaneFolderRoot",
                                                                    "data":
                                                                       {


                                                                       },
                                                                    "success": function (result) {
                                                                        $('#tree2').html(result);
                                                                    }
                                                                });
                                                            }
                                                            else {
                                                                hideOverlay(true, 'editableWorkSpace');
                                                                PHARMAACE.FORECASTAPP.UTILITY.popalert("Unable to delete" + delmsg +' '+folderNameForDelete);

                                                                }

                                                        }
                                                    });

                                                    
                                                }
                                              
                                            }
                                        });
                                   
                                        objectIdForDelete = "";
                                        lineageForDelete = "";
                                    }


                                    if (key =="copy") {
                                        
                                        objectIdForCopy = pid;
                                        lineageForCopy = selectedLineage;
                                  
                                        folderNameForCopy=PrevName.substr(PrevName.indexOf(' ') + 1);
                                        isFileCopy = false;
                                        itemsDisabled["paste"] =false;
                                    }

                                    if (key == "paste") {
                                        showOverlay("Please wait while we are copying...", 'editableWorkSpace', '15', '');

                                        var objectIdForPaste = pid;
                                        var lineageForPaste = selectedLineage;
                                        var objectId = objectIdForPaste;
                                        var lineage = document.getElementById(objectIdForPaste).getAttribute("lineagestring");
                                        var sequence = document.getElementById(objectIdForPaste).getAttribute("sequence");
                                        $.ajax({
                                            "url": "UserWorkSpace/checkNameForPaste",
                                            "data":
                                                {
                                                    'objectIdForPaste': objectIdForPaste,
                                                    'lineageForPaste': lineageForPaste,
                                                    'folderNameForCopy': folderNameForCopy
                                                },
                                             "success": function (result) {
                                            if(result==1)
                                            {

                                                $.ajax({
                                                    "url": "UserWorkSpace/paste",
                                                    "data":
                                                        {
                                                            'objectIdForCopy': objectIdForCopy,
                                                            'lineageForCopy': lineageForCopy,
                                                            'objectIdForPaste': objectIdForPaste,
                                                            'lineageForPaste': lineageForPaste

                                                        },
                                                    "success": function (result) {
                                                        if (result == 1) {
                                                            hideOverlay(true, 'editableWorkSpace');
                                                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Copied successfully");
                                                            callLeftPaneFolderViewWithIndexForCreatedFolder(objectId, lineage, sequence);
                                                            IncCountAfterPaste(isFileCopy, lineageForPaste, objectIdForPaste, objectIdForCopy);

                                                        }
                                                        else 
                                                        {
                                                            hideOverlay(true, 'editableWorkSpace');
                                                            PHARMAACE.FORECASTAPP.UTILITY.popalert("Unable to copy");

                                                        }

                                                    }
                                                });

                                            }
                                            else if(result==0)
                                            {
                                                hideOverlay(true, 'editableWorkSpace');
                                              //  PHARMAACE.FORECASTAPP.UTILITY.popalert("Folder already exist");


                                             
                                                bootbox.confirm({
                                                    size: 'small',
                                                    message: 'With another name already exist,Are you sure you want to copy with another name',
                                                    buttons: {
                                                        'confirm': {
                                                            label: 'Yes',
                                                            className: 'btn-danger pull-right'
                                                        },
                                                        'cancel': {
                                                            label: 'No',
                                                            className: 'btn-default pull-left'
                                                        }
                                                    },
                                                    callback: function (result) {
                                                        if (result) {
                                                            showOverlay("Please wait while we are copying...", 'editableWorkSpace', '15', '');

                                                            folderNameForCopy = folderNameForCopy + "_copy";

                                                            $.ajax({
                                                                "url": "UserWorkSpace/paste",
                                                                "data":
                                                                    {
                                                                        'objectIdForCopy': objectIdForCopy,
                                                                        'lineageForCopy': lineageForCopy,
                                                                        'objectIdForPaste': objectIdForPaste,
                                                                        'lineageForPaste': lineageForPaste,
                                                                        'folderNameForCopy': folderNameForCopy


                                                                    },
                                                                "success": function (result) {
                                                                    if (result == 1) {
                                                                     hideOverlay(true, 'editableWorkSpace');
                                                                        PHARMAACE.FORECASTAPP.UTILITY.popalert("Copied successfully");
                                                                        callLeftPaneFolderViewWithIndexForCreatedFolder(objectId, lineage, sequence);
                                                                        IncCountAfterPaste(isFileCopy, lineageForPaste, objectIdForPaste, objectIdForCopy);


                                                                    }
                                                                     else {
                                                              hideOverlay(true, 'editableWorkSpace');
                                                                        PHARMAACE.FORECASTAPP.UTILITY.popalert("Unable to copy");

                                                                    }

                                                                }
                                                            });
                                                           

                                                        }
                                                        else {
                                                            hideOverlay(true, 'editableWorkSpace');
                                                        }
                                                    }
                                                });

                                             
                                            }

                                        }


                                        });

                                      

                                    }

                                }

                                /// var m = "clicked: " + key;

                            },
                            items: menuItems
                        };
                    }

                
                ////////////////////////////////////////////
                //   callback: function (key, options) {

                //       var x, ParentId;

                //       var ListItem = $("li[class*='context-menu-active']");
                //       var pid = $(ListItem).attr('id');
                //       var permission = $(ListItem).attr('permission');

                //       selectedLineage = $(ListItem).attr('lineageString');


                //       selectedFolderId = pid;


                //       if (typeof pid != 'undefined') {
                //           document.getElementById("txtParent").value = pid;
                //       }


                //       if (typeof ParentId != 'undefined') {
                //           document.getElementById("txtParent").value = ParentId;
                //       }

                //     //  alert(x);

                //       if (x == "File") {
                //           alert("The directry or file can not be created under file..!!");
                //       }
                //       else {

                //           if (key == "new") {
                //               $('#btnmodl').click();
                //               alert('this');
                //               var s = document.getElementById('txtFolderName').value
                //           }
                //           if (key == "uploadfile") {

                //               $('#btnupload').click();

                //              // var s = document.getElementById('txtFolderName').value
                //           }

                //       }

                //       /// var m = "clicked: " + key;

                //   },
                //   items: {


                //       "new": {
                //           name: "Create Folder", icon: "fa-folder-o", disabled: //true

                ////toDiosable($("li[class*='context-menu-active']").attr('permission'))
                ////       },

                //       function (key, opt) {
                //           
                //           return !!itemsDisabled[key];
                //       }},

                //       "uploadfile": { name: "Upload File", icon: "fa-files-o" },
                //       "rename": { name: "Rename", icon: "fa-pencil-square-o" },
                //       "download": { name: "Download", icon: "fa-download" },
                //       "share": { name: "share", icon: "fa-share-square-o" }

                //   }
                ///////////////////////////////////////////
            });

            
        });


        $.fn.extend({
            treed: function (o) {

                var openedClass = 'glyphicon-minus-sign';
                var closedClass = 'glyphicon-plus-sign';

                if (typeof o != 'undefined') {
                    if (typeof o.openedClass != 'undefined') {
                        openedClass = o.openedClass;
                    }
                    if (typeof o.closedClass != 'undefined') {
                        closedClass = o.closedClass;
                    }
                };

                //initialize each of the top levels
                var tree = $(this);
                tree.addClass("tree");
                tree.find('li').has("ul").each(function () {
                    var branch = $(this); //li with children ul
                    branch.prepend("<i class='indicator glyphicon " + closedClass + "'></i>");
                    branch.addClass('branch');
                    branch.on('click', function (e) {
                        if (this == e.target) {
                            var icon = $(this).children('i:first');
                            icon.toggleClass(openedClass + " " + closedClass);
                            $(this).children().children().toggle();
                        }
                    })
                    branch.children().children().toggle();
                });
                //fire event from the dynamically added icon
                tree.find('.branch .indicator').each(function () {
                    $(this).on('click', function () {
                        $(this).closest('li').click();
                    });
                });
                //fire event to open branch if the li contains an anchor instead of text
                tree.find('.branch>a').each(function () {
                    $(this).on('click', function (e) {
                        $(this).closest('li').click();
                        e.preventDefault();
                    });
                });
                //fire event to open branch if the li contains a button instead of text
                tree.find('.branch>button').each(function () {
                    $(this).on('click', function (e) {
                        $(this).closest('li').click();
                        e.preventDefault();
                    });
                });
            }
        });
    </script>
    <script>

        

            

    </script>
      <input type="hidden" value="0" id="lastSelected" />

   <form class="form-horizontal" role="form">
  
   <div id="addnewproduct" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" >×</button>
                <h4 class="modal-title" >Add New Project</h4>
            </div>
            <div class="modal-body">
             <%--   <form class="form-horizontal" role="form"> giving error--%>

    <div class="form-group">
       <label for="name" class ="control-label col-sm-4">Project Name</label>
  <div class="col-sm-8">
       <input type="text" class="form-control" id="name" placeholder="Enter Project Name" onkeypress='return event.charCode!=62 && event.charCode!=60 && event.charCode!=158 && event.charCode!=124 && event.charCode!=63 && event.charCode!=42 && event.charCode!=34 && event.charCode!=92 && event.charCode!=47' required>
  </div>
     </div>
    <div class="form-group" id="forbdl">
       <label for="bdld" class ="control-label col-sm-4">BD&amp;L Lead</label>
  <div class="col-sm-8">

     <%-- <%=Html.DropDownList("bdl", (SelectList)ViewBag.users, new { @class = "selectpicker form-control search-filter select-dropdown selectBox",@required = (string)null})%>--%>
       <select id="bdl" name="bdl" class="selectpicker form-control search-filter select-dropdown selectBox" required>
          <option value="" selected="selected">Please select</option>
      <%
          foreach (var user in ViewBag.users)
          { %>
          
          <option value=<%=user.UserId%> data-email="<%=user.Email %>"><%=user.FullName%></option>

         <%  }
           %>
           </select>
     
       <%-- <select id="bdl" class="selectpicker form-control search-filter select-dropdown selectBox">
                                    <option value="" selected="selected">Please select</option>
                                    <option value="1" >Lesley Pan</option>
                                    <option value="2">Nick Plumeridge</option>
                                    <option value="3" >Josh Schafer</option> 
                                   
                                </select>  --%>

      </div>
     </div>
    <div class="form-group" id="dealbox">
       <label for="bdl" class ="control-label col-sm-4">Deal Champion</label>
  <div class="col-sm-8">
      <%-- <%=Html.DropDownList("dealchamp", (SelectList)ViewBag.users, new { @class = "selectpicker form-control search-filter select-dropdown selectBox",@required = (string)null })%>
      --%> 
       <select id="dealchamp" name="dealchamp" class="selectpicker form-control search-filter select-dropdown selectBox" required>
            <option value="" selected="selected">Please select</option>
      <%
          foreach (var user in ViewBag.users)
          { %>
          
          <option value="<%=user.UserId%>"  data-email="<%=user.Email %>"><%=user.FullName%></option>
<%--           data-content="<a title='<%=user.FullName%>'><%=user.FullName%></a>"--%>

         <%  }
           %>
           </select>

      </div>
     </div>
    <div class="form-group">
       <label for="status" class ="control-label col-sm-4">Project Stage</label>
  <div class="col-sm-8">

     <%=Html.DropDownList("status", (SelectList)ViewBag.stageList, new { @class = "selectpicker form-control search-filter select-dropdown selectBox",@required = (string)null })%>
  
  </div>
     </div>
    <div class="form-group">
       <label for="activity" class ="control-label col-sm-4">Types of Activity</label>
  <div class="col-sm-8">

       <%=Html.DropDownList("activity", (SelectList)ViewBag.activitiesList, new { @class = "selectpicker form-control search-filter select-dropdown selectBox",@required = (string)null })%>

  </div>
     </div>
                    <div class="form-group">
       <label for="bdl" class ="control-label col-sm-4">Priority</label>
  <div class="col-sm-8">
       
      <%=Html.DropDownList("priority", (SelectList)ViewBag.ProjPriority, new { @class = "selectpicker form-control search-filter select-dropdown selectBox",@required = (string)null })%>


  </div>
     </div>


            <div class="form-group">
       <label for="deal" class ="control-label col-sm-4">Deal Value</label>
                 <div class="col-sm-2">
                            <%=Html.DropDownList("currency", (SelectList)ViewBag.CurrencyType, new { @class = "selectpicker form-control search-filter select-dropdown selectBox",@required = (string)null })%>

                     </div>
  <div class="col-sm-6">
       <input type="text" onkeypress='return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == 46' class="form-control" id="deal" placeholder="$ Value" required>
  </div>
     </div>
    <div class="form-group">
       <label for="performance" class ="control-label col-sm-4">Performance Objective</label>
  <div class="col-sm-8">
       <textarea row="6" class="form-control" id="performance" placeholder="Next steps" style="resize:none" onkeypress="Insertnewline()&& LimitThousandChar();" required></textarea>
  </div>
     </div>
   
 <%--</form>--%>
               
            </div>
            <div class="modal-footer">
                <span id="lblError" style="color: red; float: left"></span>
                
                <input type="text" name="name" style="display:none" id="SelectedProjectId" value="" />
                <button type="button" class="btn btn-default" data-dismiss="modal" >Cancel</button>
               <%-- <button type="button" onclick="SaveProject();" class="btn btn-primary" data-dismiss="modal" id="btnNewProduct">OK</button>--%>
                  <input type="submit" onclick="SaveProject();" class="btn btn-primary" data-dismiss="modal" value="Submit" id="btnNewProduct">
            </div>
        </div>
    </div>
</div>
    </form>


    
    <div id="mainDiv">
        <div id="mainInside">
            <div class="col-md-9"></div>
            
        </div>
        <div  id="mainContent">
            <div class="col-md-3"  id="leftmenu">
                
                    <div  class="leftSection" >

                        
                        
                    <%--    <div class="col-md-9" id="workspaceCustom">
                              <input type="text" style=" height:29px; "  class="form-control"  onkeyup="searchFromList(event)" placeholder="Search from below..." id="searchFromList">
                        </div>--%>
                      <div class="col-md-10" id="workspaceCustom">
                              <span style="float:left;">
                                  <input type="text" style=" height:29px; "  class="form-control"  onkeyup="searchFromList(event)" placeholder="Folder Search" id="searchFromList">
<%--                                  <input type="button" style=" height:29px;display:none "  name="Submit" id="advSearch" value="Search" onclick="rootFolderListAdvSearch()" />--%>
                                  <span class="icon-input-btn" id="searchButton" style="display:none; margin-left:-12px;"><span class="glyphicon glyphicon-search" style="font-size: 14px; color: rgb(51, 51, 51);"></span> <input type="submit" class="btn btn-default" value="Search" id="advSearch" onclick="rootFolderListAdvSearch();" style="height:29px;margin-top:0px"></span>
                           
                       </span><span style="float:right;"><a  id="addnewproject" title="Add new project" onclick="setPopuptitleforAdd();"  href="#" data-toggle="modal" data-target='#addnewproduct'>
<span class="glyphicon glyphicon-plus-sign" aria-hidden="true" title="Create project" style="font-size:1.7em; top:4px;"></span></a></span>           
                                   <%--<div id="docIcons">     
                          <div class="active">
                                <ul>
                                  <li><a  id="addnewproject" title="Add new project" onclick="setPopuptitleforAdd();"  href="#" data-toggle="modal" data-target='#addnewproduct'>
<span class="glyphicon glyphicon-plus-sign" aria-hidden="true" title="Create project"></span></a> </li></ul>
</div>
                        </div>

                         </div>--%>



                        
                       <%-- <div id="docIcons">     
                          <div class="active">
                                <ul>
                                  <li><a  id="addnewproject" title="Add new project" onclick="setPopuptitleforAdd();"  href="#" data-toggle="modal" data-target='#addnewproduct'>
<span class="glyphicon glyphicon-plus-sign" aria-hidden="true" title="Create project"></span></a> </li></ul>
</div>

                        </div>--%>
                     </div>
                        
                        
                           <div class="col-md-2" id="workspaceSlider">
                            <ul id="sliderArrow">
                                <li> <%--<span class="glyphicon glyphicon-menu-left"   aria-hidden="true" title="Hide"></span>--%> 
                                    <i class="fa fa-chevron-left" aria-hidden="true" title="Collapse"></i>
                                </li>
                                
                            </ul>
                        </div>
                         

                    </div>


<div id="treeforAdvSearch" style="cursor:default !important">
                        
                     </div>
                <div id="treeforReporting">
                        
                     </div>
              
                <div id="treeforfolderlist">
                        <ul id="tree2">

                            <%
                                int i = 1;


                                 %>
                              <%foreach (var folders in ViewBag.rootFolder)
                                {  
                              %>
                           
                               <li id=<%=folders.ObjectId%> permission="<%=folders.permission%>" lineageString="<%=folders.Lineage%>" sequence="<%=i%>" class="firstLi">
                                 
                                   <%--<span class="glyphicon-folder-open" id='<%="Span2" + folders.Id.ToString().Trim()%>'></span>--%>
                                   <span class="glyphicon glyphicon glyphicon-folder-close" id='<%="SpanFirst" + folders.ObjectId.ToString().Trim()%>' aria-hidden="true" title="Create New"></span>
                                     <span class="fa fa-chevron-down" id='<%="Span" + folders.ObjectId.ToString().Trim()%>' onclick="callLeftPaneFolderViewWithIndex(<%=folders.ObjectId%>,'<%=folders.Lineage%>',<%=i%>);"  aria-hidden="true" title="Hide"></span>
                                   <a href="#"  onclick="callEditableWorkSpaceJSON(<%=folders.ObjectId%>, ' ' + '<%=folders.Lineage%>');"><%=i%> <%=folders.Name.Trim()%></a>
                                   <span class="badge" id='<%= "SpnFCount" + folders.ObjectId%>' ><%=folders.FileCounts%></span>
                                   <span style="width:34px;float:right;position:relative;margin-top:5px;" id="editProductIcon">
                    <a  title="Edit Project" id="editproject" href="#" data-toggle="modal" onclick="setPopuptitle(<%=folders.ObjectId%>);" data-target='#addnewproduct'><i class="fa fa-edit" style="font-size:16px;cursor: pointer;padding-left:7px;display:block;"></i></a></span>



                               </li>

                             <%
                                     i = i + 1;

                                 }%>


<%--
                <li ><a href="#">asIce</a>

                  <ul>
                        <li>1. Business Development
                            <ul>
                                <li></li></ul>
                        </li>
                        <li id="lijk">2. Company Reports
                            <ul>
                                </ul>
                        </li>
                        <li>3. Finance
                            <ul>
                                </ul>
                        </li>
                        <li>4. Legal
                            <ul>
                                </ul>
                        </li>
                        <li>5. Manufacturing
                            <ul>
                                </ul>
                             </li>
                        <li>6. Commercial
                            <ul>
                                </ul>
                        </li>
                        <li>7. Regulatory
                            <ul>
                                </ul>
                        </li>
                        <li>8. Scientific & Technology
                            <ul>
                                </ul>
                        </li>
                        <li>9. Analyst Report
                            <ul>
                                </ul>
                        </li>
                        <li id="liDel" onclick="delUI(liDel);">10. Forecasting<span class="badge">4</span>
                            <ul>
                                <li>10.1 Model
                                    <ul>
                                </ul>
                                </li>
                                <li>10.2 Assumption
                                    <ul>
                                </ul>
                                </li>
                                <li>10.3 Presentation
                                    <ul>
                                </ul>
                                </li>

                            </ul>
                        </li>
                        <li>11. CI
                            <ul>
                                </ul>
                        </li>
                        <li>12. Market Research
                            <ul>
                                </ul>
                        </li>
                        <li>13. Raw Data
                            <ul>
                                </ul>
                        </li>
                      
                    </ul>
                </li>--%>
            
            </ul>

                </div>
                <div id="verticalTitle">
                    <h2 class="verticalTitle verticalText"><a href="#"><span style="cursor:pointer" class="collapsedVisualsTitle largeFontSize">Library</span></a></h2>
                </div>
                <div id="dragbar" class="resizer_x"></div>

                <div id="progressbox">
                  <ul>

                  </ul>  
                </div>

                
            </div>
            <div class="col-md-9" id="editableWorkSpace">

            
                <!-- -->
                <div class="row" id="" style="padding-top:4px; padding-bottom:4px;  width:100%; margin-left:0px;">
                   <div class="col-md-6 col-lg-6 collapse navbar-collapse js-navbar-collapse" style="padding-left: 0px; padding-right:0px;">
                       <ul class="nav nav-pills nav-justified">
                      <li data-target="#myCarousel" data-slide-to="0" class="active"><a href="#" onclick="GetLibraryTab();">Library</a></li>
                       <li id="ASearch" data-target="#myCarousel"  data-slide-to="0"><a  href="#" onclick="showAdvSearch();">Advance Search</a></li>
                       <li data-target="#myCarousel" data-slide-to="1" ><a  href="#" onclick="GetTrackerSummaryTab();">Tracker</a></li>
<%--                     <li data-target="#myCarousel" data-slide-to="2" class="dropdown" data-toggle="dropdown" data-hover="dropdown">--%>
                           <li id="ActLog" data-target="#myCarousel" data-slide-to="2"  >

                           <a href="#" onclick="showReporting();">Activity Log </a>
                         
  <%--<button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" data-hover="dropdown">
   Reporting <span class="caret"></span>
  </button>--%>
 <%-- <ul class="dropdown-menu">
        <%
foreach (var folders in ViewBag.rootFolder)
            {
                              %>

    <li><a href="#"  onclick="getFilesForReporting(<%=folders.ObjectId%>, ' ' + '<%=folders.Lineage%>');"><%=folders.Name.Trim() %></a></li>


      <%} %>--%>
   <%-- <li><a href="#">ICE</a></li>
    <li class="dropdown">
      <a href="#">Denver</a>
      <ul class="dropdown-menu">
        <li><a href="#">Documents Accessed</a></li>
        <li><a href="#">Documents Uploaded</a></li>
         <li><a href="#">Documents Activity</a></li>
         <li><a href="#">User Reports</a></li>       
       </ul>
    </li>--%>
    
  <%--</ul>--%>

                        <%-- <a href="#" onclick="showReporting();">Reporting <span class="caret"></span></a>				
				        <ul class="dropdown-menu mega-dropdown-menu" style="width:760px; padding:0px;">
					
					<li class="col-sm-3">
						<ul>
							
							<li><a href="#" title="Documents Accessed">Documents Accessed</a></li>
                            <li><a href="#" title="Documents Uploaded">Documents Uploaded</a></li>
                            <li><a href="#" title="Documents Activity">Documents Activity</a></li>
                            <li ><a href="#" title="User Reports">User Reports</a></li>
							
							
							
						</ul>
					</li>
					
				</ul>--%>
                     </li>
                    </ul></div>
                    <form id="searchbarForContentsearch" action="#" method="post" style="text-align: left;" onsubmit="ContentFilterSearch();" >
                <div class="col-md-3">
                    <div id="custom-search-input" style="display:none">
                <div class="input-group col-md-12" id="advFilter">

                    <span class="spanText"><input type="text" class="form-control"  placeholder="Text Search" id="filter"  onkeypress="contentFilterByEnter(event)"></span>
<%--                    <span class="spanFilter"><i class="fa fa-filter" onclick="ContentFilterSearch();" aria-hidden="true"></i></span>--%>
<%--                    <span style=""><a href="#" onclick="showAdvSearch();"><i class="fa fa-search" aria-hidden="true" style="font-size: 1.65em; color:#4e4e4e; margin-left: 4px; margin-top: 6px;"></i></a></span>--%>
                        <span class="searchIcon" ><a href="#" onclick="ContentFilterSearch();"><i class="fa fa-search" aria-hidden="true" style="font-size: 1.65em; color:#4e4e4e; margin-left: 4px; margin-top: 6px;"></i></a></span>

                  
                    </div>

 
                   
                    
                    </div>
                     
                </div>

                  
                   <div class="col-md-3" style="padding-right:0px;padding-left: 0px; float:right;">

                       <div class="col-md-12" style="padding-right:0px;">
                    <div id="showhide" style="float:left; max-width:100px;">

                           </div>
                    <div id="tabAttr">
                        <div  id="docIcons">     
                            <div class="active">
                                <ul>
                                    <%-- <li><a  id="addnewproject" title="Add new project" onclick="setPopuptitleforAdd();"  href="#" data-toggle="modal" data-target='#addnewproduct'>
<span class="glyphicon glyphicon-plus-sign" aria-hidden="true" title="Create project"></span></a> </li>--%>

<%--                        <li> <span class="glyphicon glyphicon glyphicon-folder-close" aria-hidden="true" title="Create New"></span> </li>--%>
                       <li id="LiUploadDoc"><form><span id="fileselector"><label class="btn btn-default" for="upload-file-selector">
                            <input id="upload-file-selector" type="file" onchange="uploadDocument()" multiple accept=".tif,.tiff,.gif,.jpg,.jpeg,.png,.doc,.docx,.pdf,.xls,.xlsb,.xlsm, .xlsx, .csv, .txt, .rtf,.zip, .jpeg, .png,.ppt,.pptx,.bmp,.rar">
            <i class="glyphicon glyphicon-cloud-upload margin-correction" title="Upload"></i>


                                                          </label></span></form></li>
                        <li id="LiDownloadDoc"> <span class="glyphicon glyphicon-download-alt" aria-hidden="true" title="Download"  onclick="downloadSelectedFile()"></span> </li>
                      
                                    
                              <li id="LiShareDoc"> <span class="glyphicon glyphicon-share" aria-hidden="true" title="Share"></span> </li>
                    </ul>
                            </div>
                            
                        </div>
                    </div>
                    <%--<span class="input-group-addon" style="border:0px; border-radius:0px; padding:0px;">
                        <button type="submit" style="border-radius:0px;" >
                            <span class="glyphicon glyphicon-search" ></span>
                        </button>  
                    </span>--%>
                </div>
            <div class="col-md-4" id="workspaceView" style="padding-left:0px;">
                    <ul>
                        <li> <span class="glyphicon glyphicon-th-list" aria-hidden="true" title="Icon View"></span> </li>
                        <li> <span class="glyphicon glyphicon-th" aria-hidden="true" title="List View"></span> </li>
                    </ul>
                 </div>
                   </div>
               </div>
               
    <div id="myCarousel" class="carousel slider">
    
      <!-- Wrapper for slides -->
      <div class="carousel-inner">
      
        <div class="item active" >
            <form id="upload" method="post" action="/" enctype="multipart/form-data">
			<div id="drop">
            <%--<div id="editableWorkSpaceContent">--%>

<%--          <% Html.RenderPartial("GetEditableWorkSpace"); %>--%>
          <table id="userworkspaceTable" class="table table-striped select" cellspacing="0" width="100%" >
        <thead>
            <tr>
                <th><input type="checkbox" name="select_all" value="1" id="example-select-all"></th>
                <th>Path</th>
                <th >Name</th>
                <th>Shared With</th>
                <th>Type</th>
                <th>Created Date</th>                
                <%--<th>Last modified</th>--%>
                <th>Size </th>
                
            </tr>
        </thead>
      
        <tbody>
            <%-- 
            <tr>
                <td></td>
                <td>10.2.4</td>
                <td>Assumption rationale</td>
                <td>87kb</td>
                <td><i class="fa fa-file-excel-o fa-5" aria-hidden="true" title="Excel"></i></td>
                <td>01Feb, 2017</td>
                <td>15Feb, 2017</td>
                <td>Samarth Gupta, Pallavi prasad</td>
                <td style="display:none">Folder</td>
<%--                        <tr>--%>
               <%-- <td></td>
                <td>10.2.3</td>
                <td>Outpatient or Ambulatory Procedure</td>
                <td>56kb</td>
                <td><i class="fa fa-file-pdf-o fa-5" aria-hidden="true" title="Pdf"></i></td>
                <td>11Feb, 2017</td>                
                <td>19Feb, 2017</td>
                <td>Jossy Matute,  Antoine Uwimana</td>
            </tr>
            --%>


            
            

            
            
        </tbody>
    </table>
        
     </div></form>   
<%--</div>--%>
        </div><!-- End Item -->
 
         <div class="item" style="padding:15px 0px;">
                                <div style="width:100%">                 
               <div style="width:40%; float:left;">
    <div class="corner-bottom-both-bevel" style="width:420px;">
       <a stageId=""  stageName="Screen / Profile" href="#" title="Screen/ Profile" onclick="stageWiseProjList('Screen / Profile')"> <div class="absDiv" >Screen / Profile: $<%=ViewData["screenProfileCounts_Price"] %> M (<%= ViewData["screenProfileCounts"] %> deals)</div>

</a></div>
    <div class="corner-bottom-both-bevel" style="width: 300px;margin-top:1px;margin-left: 60px; border-color:#b199e3 transparent transparent transparent">
    <a stageId="" stageName="Diligence"  title="Diligence"  href="#" onclick="stageWiseProjList('Diligence')"><div class="absDiv">Diligence: $<%=ViewData["Dilligence_Price"] %> M ( <%=ViewData["DilligenceCounts"] %> deals)</div>

</a></div>
    <div class="corner-bottom-both-bevel" style="width: 180px;margin-top:1px;margin-left: 120px;border-color:#d8ccf1 transparent transparent transparent">
    <a stageId="" stageName="Negotiation"  title="Negotiation"  href="#" onclick="stageWiseProjList('Negotiation')"><div class="absDiv">Negotiation: $<%=ViewData["Negotiation_Price"] %> M (<%=ViewData["NegotiationCounts"] %> deals)</div>
       </a> </div>
    <div style="width:100%; margin-top:10px;">
        <ul class="nav nav-pills" style="background-color:#fff; width:100%; max-width:100%;">
    
        <li class="active" style="width:100%; background-color:#eee"><a href="#" stageName="total" style="margin:0px;" onclick="stageWiseProjList('total')">Total Opportunity Value <span class="badge">$<%=ViewData["Total_Price"] %> M </span></a></li>
        <li class="active" style="width:100%; margin-left:0px; margin-top:4px; background-color:#eee"><a stageId="" stageName="onHoldWithdrwal" href="#" style="margin:0px;" onclick="stageWiseProjList('onHoldWithdrwal')">On Hold / Withdrawn from process (<%=ViewData["onHoldWithdrwalCounts"] %> Projects)
     <span class="badge">$<%= ViewData["onHoldWithdrwal_Price"] %> M</span></a></li>

    </ul>

    </div>

                              </div>
               <div style="width:60%; float:right;">
                   <div id="placeholder" class="demo-placeholder" style="height:340px;"></div>                      
                </div>
            </div>
            <div style="width:100%;">

                <table id="trackerWorkspaceTable" class="table table-striped select" cellspacing="0" width="100%" >
        <thead>
            <tr>
                <th>Project Stage</th>
                <th>Project Type</th>
                <th>Transaction</th>
                <th>Deal Champion</th>
                <th>BD&amp;L Lead</th>
                <th>Performance Objective(s)</th>                
            </tr>
        </thead>
      
        <tbody>
            <%-- <tr>
                <td>Negotiation</td>
                <td>M&A</td>
                <td>Deal 1 – BDNL</td>
                <td>Project owner 1</td>
                <td>Lead 1</td>
                <td><ul><li>Sign agreement</li>
<li>Finalize PA, TSA negotiation and close</li></ul></td>                                
            </tr>--%>
          <%--  <tr>
                <td>Negotiation</td>
                <td>M&A</td>
                <td>Deal 1 – BDNL</td>
                <td>Project owner 1</td>
                <td>Lead 1</td>
                <td><ul><li>Sign agreement</li>
<li>Finalize PA, TSA negotiation and close</li></ul></td>                                
            </tr>          --%> 
        </tbody>
    </table>        
            </div>                     


            
       </div><!-- End Item -->
        
       
         <div class="item" id="ReportDiv" style="padding:15px 0px;">
                     <table id="ReportworkspaceTable" class="table table-striped select" cellspacing="0" width="100%" >
        
            <thead>
            <tr>
<%--                <th>Index</th>--%>
                <th>User</th>
                <th>File Name</th>
                <th>Main Folder</th>
                
                 <th>Activity Date</th>
                <th>Custom Message</th>
                
                                
            </tr>
        </thead>
      
        <tbody>
            <%-- <tr>
                <td>4.1.10.1</td>
                <td>User 1</td>
                 <td>CLBP Presentation30.jan.2017.pdf</td>
                <td>Theraputic Indications</td>
                <td>Malinckrodt</td>                
                <td>View</td>                                
            </tr>
            <tr>
                <td>1.4.4</td>
                <td>User 2</td>
                 <td>Mesoblast Annual Report 2016.pdf</td>
                <td>Corporate</td>
                <td>Malinckrodt</td>                
                <td>View</td>    --%>                            
           <%-- </tr>     --%>        
        </tbody>
    </table>       
                 </div>

                
      </div><!-- End Carousel Inner -->

    </div><!-- End Carousel -->

           
                
                
                 </div>

        </div>
    </div>
       
<%--</div>--%>
   
    <div class="modal fade" id="myModal">
            <div class="modal-dialog" style="width:300px;">
                <div class="modal-content">
                    <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" >×</button>

                        <h4 class="modal-title" id="myModalLabel">Create Folder</h4>
                    </div>
                    <div class="modal-body">
                        
                                    
        <input type="text" placeholder="Enter Folder Name..." id="txtFolderName" name="name" style="width:100%;" onkeypress='return event.charCode!=62 && event.charCode!=60 && event.charCode!=158 && event.charCode!=124 && event.charCode!=63 && event.charCode!=42 && event.charCode!=34 && event.charCode!=92 && event.charCode!=47' />      
      
        <input type="text"  id="txtParent" style="display:none;width:100%;" name="name" />

    
                            

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" >Cancel</button>
                      <button type="button" id="btnModalClose" class="btn btn-default" data-dismiss="modal" style="display:none"> Close</button>      
                        <button type="button" onclick="createFolder(document.getElementById('txtFolderName').value);" class="btn btn-primary">Ok</button>
                    </div>
                </div>
            </div>
        </div>
    <div class="modal fade" id="uploadModal">
            <div class="modal-dialog" style="width:300px;">
                <div class="modal-content">
                    <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" >×</button>

                        <h4 class="modal-title" id="uploadModalLabel">Upload File</h4>
                    </div>
                    <div class="modal-body" style="text-align:center;">
                        
                                    
        
                     <div class="form-group">
        <input type="file" id="BSbtninfo" onchange="uploadDocument();" style="height:31px;" multiple accept=".tif,.tiff,.gif,.jpg,.jpeg,.png,.doc,.docx,.pdf,.xls,.xlsb,.xlsm, .xlsx, .csv, .txt, .rtf, .html, .zip, .jpeg, .png,.ppt,.pptx,.bmp,.rar,.htm">
    </div>
      
    
                            

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" >Cancel</button>

                        
                      <button type="button" id="btnuploadModalClose" class="btn btn-default" data-dismiss="modal" style="display:none"> Close</button> 


                    </div>
                </div>
            </div>
        </div>
    <div class="modal fade" id="renameModal">
          <div class="modal-dialog" style="width:300px;">
               <div class="modal-content">
                    <div class="modal-header">
                          <button type="button" class="close" data-dismiss="modal" aria-hidden="true" >×</button>
                                <h4 class="modal-title" id="renameModalLabel">Rename</h4>
                    </div>
                          <div class="modal-body"><%--placeholder="Enter New Name..."--%>
                               <input type="text"  id="txtFolderNameRename" name="name" style="width:100%;" onkeypress='return event.charCode!=62 && event.charCode!=60 && event.charCode!=158 && event.charCode!=124 && event.charCode!=63 && event.charCode!=42 && event.charCode!=34 && event.charCode!=92 && event.charCode!=47'/>      
                               <input type="text"  id="txtParentRename" style="display:none;width:100%;" name="name" />

                          </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" >Cancel</button>
                        <button type="button" id="btnRenameModalClose" class="btn btn-default" data-dismiss="modal" style="display:none"> Close</button>      
                        <button type="button" onclick="renameFolder(document.getElementById('txtFolderNameRename').value);" class="btn btn-primary">Rename</button>
                    </div>
              </div>
         </div>
    </div>

       


    <button type="button" style="display:none" class="btn btn-primary btn-lg" id="btnmodl" data-toggle="modal" data-target="#myModal"></button>
    <button type="button" style="display:none" class="btn btn-primary btn-lg" id="btnupload" data-toggle="modal" data-target="#uploadModal"></button>
    <button type="button" style="display:none" class="btn btn-primary btn-lg" id="btnrename" data-toggle="modal" data-target="#renameModal"></button>
    <button type="button" style="display:none" class="btn btn-primary btn-lg" id="btnchangePerm" data-toggle="modal" data-target="#changePermModal"></button>
        <script src="../../Scripts/lib/jquery/icheck.min.js"></script>
   
    
     <div id="ShareResult"></div>
      <button type="button" style="display:none" class="btn btn-primary btn-lg" id="btnShowShare" data-toggle="modal" ></button>



<!--Remove After SomeTime-->
    <form>
     <div class="modal fade" id="changePermModal">
          <div class="modal-dialog" style="width:500px;">
               <div class="modal-content">
                    <div class="modal-header">
                                <h4 class="modal-title" id="changePermModalLabel" style="text-align:center">Change Permission</h4>
                    </div>
                          <div class="modal-body">
                              <div id="bdlchangePermValues">
                                  <input type="text" BDLUserId="" id="BdlId" name="name"  style="width:340px" readonly/>&emsp;<select id="permissarrValuesBDL" required="required"></select>
                              </div>
                              <br />
                              <div id="champChangePermValues">
                                  <input type="text" DealChampId="" id="ChampId" name="name" style="width:340px" readonly/>&emsp;<select id="permissarrValuesDealChamp" required="required"></select>     
                              </div>
                          </div>
                    <div class="modal-footer">    
                        <button type="button" id="btnOkModalClose" class="btn btn-default" data-dismiss="modal" style="display:none"> Close</button> 
                        <button type="button" class="btn btn-primary" onclick="PrevUserChangePermission();">Ok</button>
                    </div>
              </div>
         </div>
    </div>
    </form>

</asp:Content>

